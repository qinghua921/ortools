// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/math_opt/solvers/gurobi.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2fsolvers_2fgurobi_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2fsolvers_2fgurobi_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ortools_2fmath_5fopt_2fsolvers_2fgurobi_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ortools_2fmath_5fopt_2fsolvers_2fgurobi_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ortools_2fmath_5fopt_2fsolvers_2fgurobi_2eproto;
namespace operations_research {
namespace math_opt {
class GurobiInitializerProto;
struct GurobiInitializerProtoDefaultTypeInternal;
extern GurobiInitializerProtoDefaultTypeInternal _GurobiInitializerProto_default_instance_;
class GurobiInitializerProto_ISVKey;
struct GurobiInitializerProto_ISVKeyDefaultTypeInternal;
extern GurobiInitializerProto_ISVKeyDefaultTypeInternal _GurobiInitializerProto_ISVKey_default_instance_;
class GurobiParametersProto;
struct GurobiParametersProtoDefaultTypeInternal;
extern GurobiParametersProtoDefaultTypeInternal _GurobiParametersProto_default_instance_;
class GurobiParametersProto_Parameter;
struct GurobiParametersProto_ParameterDefaultTypeInternal;
extern GurobiParametersProto_ParameterDefaultTypeInternal _GurobiParametersProto_Parameter_default_instance_;
}  // namespace math_opt
}  // namespace operations_research
PROTOBUF_NAMESPACE_OPEN
template<> ::operations_research::math_opt::GurobiInitializerProto* Arena::CreateMaybeMessage<::operations_research::math_opt::GurobiInitializerProto>(Arena*);
template<> ::operations_research::math_opt::GurobiInitializerProto_ISVKey* Arena::CreateMaybeMessage<::operations_research::math_opt::GurobiInitializerProto_ISVKey>(Arena*);
template<> ::operations_research::math_opt::GurobiParametersProto* Arena::CreateMaybeMessage<::operations_research::math_opt::GurobiParametersProto>(Arena*);
template<> ::operations_research::math_opt::GurobiParametersProto_Parameter* Arena::CreateMaybeMessage<::operations_research::math_opt::GurobiParametersProto_Parameter>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace operations_research {
namespace math_opt {

// ===================================================================

class GurobiInitializerProto_ISVKey final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.GurobiInitializerProto.ISVKey) */ {
 public:
  inline GurobiInitializerProto_ISVKey() : GurobiInitializerProto_ISVKey(nullptr) {}
  ~GurobiInitializerProto_ISVKey() override;
  explicit PROTOBUF_CONSTEXPR GurobiInitializerProto_ISVKey(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GurobiInitializerProto_ISVKey(const GurobiInitializerProto_ISVKey& from);
  GurobiInitializerProto_ISVKey(GurobiInitializerProto_ISVKey&& from) noexcept
    : GurobiInitializerProto_ISVKey() {
    *this = ::std::move(from);
  }

  inline GurobiInitializerProto_ISVKey& operator=(const GurobiInitializerProto_ISVKey& from) {
    CopyFrom(from);
    return *this;
  }
  inline GurobiInitializerProto_ISVKey& operator=(GurobiInitializerProto_ISVKey&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GurobiInitializerProto_ISVKey& default_instance() {
    return *internal_default_instance();
  }
  static inline const GurobiInitializerProto_ISVKey* internal_default_instance() {
    return reinterpret_cast<const GurobiInitializerProto_ISVKey*>(
               &_GurobiInitializerProto_ISVKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GurobiInitializerProto_ISVKey& a, GurobiInitializerProto_ISVKey& b) {
    a.Swap(&b);
  }
  inline void Swap(GurobiInitializerProto_ISVKey* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GurobiInitializerProto_ISVKey* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GurobiInitializerProto_ISVKey* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GurobiInitializerProto_ISVKey>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GurobiInitializerProto_ISVKey& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GurobiInitializerProto_ISVKey& from) {
    GurobiInitializerProto_ISVKey::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GurobiInitializerProto_ISVKey* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "operations_research.math_opt.GurobiInitializerProto.ISVKey";
  }
  protected:
  explicit GurobiInitializerProto_ISVKey(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kApplicationNameFieldNumber = 2,
    kKeyFieldNumber = 4,
    kExpirationFieldNumber = 3,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string application_name = 2;
  void clear_application_name();
  const std::string& application_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_application_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_application_name();
  PROTOBUF_NODISCARD std::string* release_application_name();
  void set_allocated_application_name(std::string* application_name);
  private:
  const std::string& _internal_application_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_application_name(const std::string& value);
  std::string* _internal_mutable_application_name();
  public:

  // string key = 4;
  void clear_key();
  const std::string& key() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_key(ArgT0&& arg0, ArgT... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // int32 expiration = 3;
  void clear_expiration();
  int32_t expiration() const;
  void set_expiration(int32_t value);
  private:
  int32_t _internal_expiration() const;
  void _internal_set_expiration(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:operations_research.math_opt.GurobiInitializerProto.ISVKey)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr application_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
    int32_t expiration_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fsolvers_2fgurobi_2eproto;
};
// -------------------------------------------------------------------

class GurobiInitializerProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.GurobiInitializerProto) */ {
 public:
  inline GurobiInitializerProto() : GurobiInitializerProto(nullptr) {}
  ~GurobiInitializerProto() override;
  explicit PROTOBUF_CONSTEXPR GurobiInitializerProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GurobiInitializerProto(const GurobiInitializerProto& from);
  GurobiInitializerProto(GurobiInitializerProto&& from) noexcept
    : GurobiInitializerProto() {
    *this = ::std::move(from);
  }

  inline GurobiInitializerProto& operator=(const GurobiInitializerProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline GurobiInitializerProto& operator=(GurobiInitializerProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GurobiInitializerProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const GurobiInitializerProto* internal_default_instance() {
    return reinterpret_cast<const GurobiInitializerProto*>(
               &_GurobiInitializerProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GurobiInitializerProto& a, GurobiInitializerProto& b) {
    a.Swap(&b);
  }
  inline void Swap(GurobiInitializerProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GurobiInitializerProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GurobiInitializerProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GurobiInitializerProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GurobiInitializerProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GurobiInitializerProto& from) {
    GurobiInitializerProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GurobiInitializerProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "operations_research.math_opt.GurobiInitializerProto";
  }
  protected:
  explicit GurobiInitializerProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GurobiInitializerProto_ISVKey ISVKey;

  // accessors -------------------------------------------------------

  enum : int {
    kIsvKeyFieldNumber = 1,
  };
  // .operations_research.math_opt.GurobiInitializerProto.ISVKey isv_key = 1;
  bool has_isv_key() const;
  private:
  bool _internal_has_isv_key() const;
  public:
  void clear_isv_key();
  const ::operations_research::math_opt::GurobiInitializerProto_ISVKey& isv_key() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::GurobiInitializerProto_ISVKey* release_isv_key();
  ::operations_research::math_opt::GurobiInitializerProto_ISVKey* mutable_isv_key();
  void set_allocated_isv_key(::operations_research::math_opt::GurobiInitializerProto_ISVKey* isv_key);
  private:
  const ::operations_research::math_opt::GurobiInitializerProto_ISVKey& _internal_isv_key() const;
  ::operations_research::math_opt::GurobiInitializerProto_ISVKey* _internal_mutable_isv_key();
  public:
  void unsafe_arena_set_allocated_isv_key(
      ::operations_research::math_opt::GurobiInitializerProto_ISVKey* isv_key);
  ::operations_research::math_opt::GurobiInitializerProto_ISVKey* unsafe_arena_release_isv_key();

  // @@protoc_insertion_point(class_scope:operations_research.math_opt.GurobiInitializerProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::operations_research::math_opt::GurobiInitializerProto_ISVKey* isv_key_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fsolvers_2fgurobi_2eproto;
};
// -------------------------------------------------------------------

class GurobiParametersProto_Parameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.GurobiParametersProto.Parameter) */ {
 public:
  inline GurobiParametersProto_Parameter() : GurobiParametersProto_Parameter(nullptr) {}
  ~GurobiParametersProto_Parameter() override;
  explicit PROTOBUF_CONSTEXPR GurobiParametersProto_Parameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GurobiParametersProto_Parameter(const GurobiParametersProto_Parameter& from);
  GurobiParametersProto_Parameter(GurobiParametersProto_Parameter&& from) noexcept
    : GurobiParametersProto_Parameter() {
    *this = ::std::move(from);
  }

  inline GurobiParametersProto_Parameter& operator=(const GurobiParametersProto_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline GurobiParametersProto_Parameter& operator=(GurobiParametersProto_Parameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GurobiParametersProto_Parameter& default_instance() {
    return *internal_default_instance();
  }
  static inline const GurobiParametersProto_Parameter* internal_default_instance() {
    return reinterpret_cast<const GurobiParametersProto_Parameter*>(
               &_GurobiParametersProto_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GurobiParametersProto_Parameter& a, GurobiParametersProto_Parameter& b) {
    a.Swap(&b);
  }
  inline void Swap(GurobiParametersProto_Parameter* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GurobiParametersProto_Parameter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GurobiParametersProto_Parameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GurobiParametersProto_Parameter>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GurobiParametersProto_Parameter& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GurobiParametersProto_Parameter& from) {
    GurobiParametersProto_Parameter::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GurobiParametersProto_Parameter* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "operations_research.math_opt.GurobiParametersProto.Parameter";
  }
  protected:
  explicit GurobiParametersProto_Parameter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string value = 2;
  void clear_value();
  const std::string& value() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:operations_research.math_opt.GurobiParametersProto.Parameter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fsolvers_2fgurobi_2eproto;
};
// -------------------------------------------------------------------

class GurobiParametersProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.GurobiParametersProto) */ {
 public:
  inline GurobiParametersProto() : GurobiParametersProto(nullptr) {}
  ~GurobiParametersProto() override;
  explicit PROTOBUF_CONSTEXPR GurobiParametersProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GurobiParametersProto(const GurobiParametersProto& from);
  GurobiParametersProto(GurobiParametersProto&& from) noexcept
    : GurobiParametersProto() {
    *this = ::std::move(from);
  }

  inline GurobiParametersProto& operator=(const GurobiParametersProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline GurobiParametersProto& operator=(GurobiParametersProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GurobiParametersProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const GurobiParametersProto* internal_default_instance() {
    return reinterpret_cast<const GurobiParametersProto*>(
               &_GurobiParametersProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GurobiParametersProto& a, GurobiParametersProto& b) {
    a.Swap(&b);
  }
  inline void Swap(GurobiParametersProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GurobiParametersProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GurobiParametersProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GurobiParametersProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GurobiParametersProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GurobiParametersProto& from) {
    GurobiParametersProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GurobiParametersProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "operations_research.math_opt.GurobiParametersProto";
  }
  protected:
  explicit GurobiParametersProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GurobiParametersProto_Parameter Parameter;

  // accessors -------------------------------------------------------

  enum : int {
    kParametersFieldNumber = 1,
  };
  // repeated .operations_research.math_opt.GurobiParametersProto.Parameter parameters = 1;
  int parameters_size() const;
  private:
  int _internal_parameters_size() const;
  public:
  void clear_parameters();
  ::operations_research::math_opt::GurobiParametersProto_Parameter* mutable_parameters(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::operations_research::math_opt::GurobiParametersProto_Parameter >*
      mutable_parameters();
  private:
  const ::operations_research::math_opt::GurobiParametersProto_Parameter& _internal_parameters(int index) const;
  ::operations_research::math_opt::GurobiParametersProto_Parameter* _internal_add_parameters();
  public:
  const ::operations_research::math_opt::GurobiParametersProto_Parameter& parameters(int index) const;
  ::operations_research::math_opt::GurobiParametersProto_Parameter* add_parameters();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::operations_research::math_opt::GurobiParametersProto_Parameter >&
      parameters() const;

  // @@protoc_insertion_point(class_scope:operations_research.math_opt.GurobiParametersProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::operations_research::math_opt::GurobiParametersProto_Parameter > parameters_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fsolvers_2fgurobi_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GurobiInitializerProto_ISVKey

// string name = 1;
inline void GurobiInitializerProto_ISVKey::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GurobiInitializerProto_ISVKey::name() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.GurobiInitializerProto.ISVKey.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GurobiInitializerProto_ISVKey::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:operations_research.math_opt.GurobiInitializerProto.ISVKey.name)
}
inline std::string* GurobiInitializerProto_ISVKey::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.GurobiInitializerProto.ISVKey.name)
  return _s;
}
inline const std::string& GurobiInitializerProto_ISVKey::_internal_name() const {
  return _impl_.name_.Get();
}
inline void GurobiInitializerProto_ISVKey::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* GurobiInitializerProto_ISVKey::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* GurobiInitializerProto_ISVKey::release_name() {
  // @@protoc_insertion_point(field_release:operations_research.math_opt.GurobiInitializerProto.ISVKey.name)
  return _impl_.name_.Release();
}
inline void GurobiInitializerProto_ISVKey::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.GurobiInitializerProto.ISVKey.name)
}

// string application_name = 2;
inline void GurobiInitializerProto_ISVKey::clear_application_name() {
  _impl_.application_name_.ClearToEmpty();
}
inline const std::string& GurobiInitializerProto_ISVKey::application_name() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.GurobiInitializerProto.ISVKey.application_name)
  return _internal_application_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GurobiInitializerProto_ISVKey::set_application_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.application_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:operations_research.math_opt.GurobiInitializerProto.ISVKey.application_name)
}
inline std::string* GurobiInitializerProto_ISVKey::mutable_application_name() {
  std::string* _s = _internal_mutable_application_name();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.GurobiInitializerProto.ISVKey.application_name)
  return _s;
}
inline const std::string& GurobiInitializerProto_ISVKey::_internal_application_name() const {
  return _impl_.application_name_.Get();
}
inline void GurobiInitializerProto_ISVKey::_internal_set_application_name(const std::string& value) {
  
  _impl_.application_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GurobiInitializerProto_ISVKey::_internal_mutable_application_name() {
  
  return _impl_.application_name_.Mutable(GetArenaForAllocation());
}
inline std::string* GurobiInitializerProto_ISVKey::release_application_name() {
  // @@protoc_insertion_point(field_release:operations_research.math_opt.GurobiInitializerProto.ISVKey.application_name)
  return _impl_.application_name_.Release();
}
inline void GurobiInitializerProto_ISVKey::set_allocated_application_name(std::string* application_name) {
  if (application_name != nullptr) {
    
  } else {
    
  }
  _impl_.application_name_.SetAllocated(application_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.application_name_.IsDefault()) {
    _impl_.application_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.GurobiInitializerProto.ISVKey.application_name)
}

// int32 expiration = 3;
inline void GurobiInitializerProto_ISVKey::clear_expiration() {
  _impl_.expiration_ = 0;
}
inline int32_t GurobiInitializerProto_ISVKey::_internal_expiration() const {
  return _impl_.expiration_;
}
inline int32_t GurobiInitializerProto_ISVKey::expiration() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.GurobiInitializerProto.ISVKey.expiration)
  return _internal_expiration();
}
inline void GurobiInitializerProto_ISVKey::_internal_set_expiration(int32_t value) {
  
  _impl_.expiration_ = value;
}
inline void GurobiInitializerProto_ISVKey::set_expiration(int32_t value) {
  _internal_set_expiration(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.GurobiInitializerProto.ISVKey.expiration)
}

// string key = 4;
inline void GurobiInitializerProto_ISVKey::clear_key() {
  _impl_.key_.ClearToEmpty();
}
inline const std::string& GurobiInitializerProto_ISVKey::key() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.GurobiInitializerProto.ISVKey.key)
  return _internal_key();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GurobiInitializerProto_ISVKey::set_key(ArgT0&& arg0, ArgT... args) {
 
 _impl_.key_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:operations_research.math_opt.GurobiInitializerProto.ISVKey.key)
}
inline std::string* GurobiInitializerProto_ISVKey::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.GurobiInitializerProto.ISVKey.key)
  return _s;
}
inline const std::string& GurobiInitializerProto_ISVKey::_internal_key() const {
  return _impl_.key_.Get();
}
inline void GurobiInitializerProto_ISVKey::_internal_set_key(const std::string& value) {
  
  _impl_.key_.Set(value, GetArenaForAllocation());
}
inline std::string* GurobiInitializerProto_ISVKey::_internal_mutable_key() {
  
  return _impl_.key_.Mutable(GetArenaForAllocation());
}
inline std::string* GurobiInitializerProto_ISVKey::release_key() {
  // @@protoc_insertion_point(field_release:operations_research.math_opt.GurobiInitializerProto.ISVKey.key)
  return _impl_.key_.Release();
}
inline void GurobiInitializerProto_ISVKey::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  _impl_.key_.SetAllocated(key, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.GurobiInitializerProto.ISVKey.key)
}

// -------------------------------------------------------------------

// GurobiInitializerProto

// .operations_research.math_opt.GurobiInitializerProto.ISVKey isv_key = 1;
inline bool GurobiInitializerProto::_internal_has_isv_key() const {
  return this != internal_default_instance() && _impl_.isv_key_ != nullptr;
}
inline bool GurobiInitializerProto::has_isv_key() const {
  return _internal_has_isv_key();
}
inline void GurobiInitializerProto::clear_isv_key() {
  if (GetArenaForAllocation() == nullptr && _impl_.isv_key_ != nullptr) {
    delete _impl_.isv_key_;
  }
  _impl_.isv_key_ = nullptr;
}
inline const ::operations_research::math_opt::GurobiInitializerProto_ISVKey& GurobiInitializerProto::_internal_isv_key() const {
  const ::operations_research::math_opt::GurobiInitializerProto_ISVKey* p = _impl_.isv_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::GurobiInitializerProto_ISVKey&>(
      ::operations_research::math_opt::_GurobiInitializerProto_ISVKey_default_instance_);
}
inline const ::operations_research::math_opt::GurobiInitializerProto_ISVKey& GurobiInitializerProto::isv_key() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.GurobiInitializerProto.isv_key)
  return _internal_isv_key();
}
inline void GurobiInitializerProto::unsafe_arena_set_allocated_isv_key(
    ::operations_research::math_opt::GurobiInitializerProto_ISVKey* isv_key) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.isv_key_);
  }
  _impl_.isv_key_ = isv_key;
  if (isv_key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.GurobiInitializerProto.isv_key)
}
inline ::operations_research::math_opt::GurobiInitializerProto_ISVKey* GurobiInitializerProto::release_isv_key() {
  
  ::operations_research::math_opt::GurobiInitializerProto_ISVKey* temp = _impl_.isv_key_;
  _impl_.isv_key_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::operations_research::math_opt::GurobiInitializerProto_ISVKey* GurobiInitializerProto::unsafe_arena_release_isv_key() {
  // @@protoc_insertion_point(field_release:operations_research.math_opt.GurobiInitializerProto.isv_key)
  
  ::operations_research::math_opt::GurobiInitializerProto_ISVKey* temp = _impl_.isv_key_;
  _impl_.isv_key_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::GurobiInitializerProto_ISVKey* GurobiInitializerProto::_internal_mutable_isv_key() {
  
  if (_impl_.isv_key_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::GurobiInitializerProto_ISVKey>(GetArenaForAllocation());
    _impl_.isv_key_ = p;
  }
  return _impl_.isv_key_;
}
inline ::operations_research::math_opt::GurobiInitializerProto_ISVKey* GurobiInitializerProto::mutable_isv_key() {
  ::operations_research::math_opt::GurobiInitializerProto_ISVKey* _msg = _internal_mutable_isv_key();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.GurobiInitializerProto.isv_key)
  return _msg;
}
inline void GurobiInitializerProto::set_allocated_isv_key(::operations_research::math_opt::GurobiInitializerProto_ISVKey* isv_key) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.isv_key_;
  }
  if (isv_key) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(isv_key);
    if (message_arena != submessage_arena) {
      isv_key = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, isv_key, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.isv_key_ = isv_key;
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.GurobiInitializerProto.isv_key)
}

// -------------------------------------------------------------------

// GurobiParametersProto_Parameter

// string name = 1;
inline void GurobiParametersProto_Parameter::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GurobiParametersProto_Parameter::name() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.GurobiParametersProto.Parameter.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GurobiParametersProto_Parameter::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:operations_research.math_opt.GurobiParametersProto.Parameter.name)
}
inline std::string* GurobiParametersProto_Parameter::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.GurobiParametersProto.Parameter.name)
  return _s;
}
inline const std::string& GurobiParametersProto_Parameter::_internal_name() const {
  return _impl_.name_.Get();
}
inline void GurobiParametersProto_Parameter::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* GurobiParametersProto_Parameter::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* GurobiParametersProto_Parameter::release_name() {
  // @@protoc_insertion_point(field_release:operations_research.math_opt.GurobiParametersProto.Parameter.name)
  return _impl_.name_.Release();
}
inline void GurobiParametersProto_Parameter::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.GurobiParametersProto.Parameter.name)
}

// string value = 2;
inline void GurobiParametersProto_Parameter::clear_value() {
  _impl_.value_.ClearToEmpty();
}
inline const std::string& GurobiParametersProto_Parameter::value() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.GurobiParametersProto.Parameter.value)
  return _internal_value();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GurobiParametersProto_Parameter::set_value(ArgT0&& arg0, ArgT... args) {
 
 _impl_.value_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:operations_research.math_opt.GurobiParametersProto.Parameter.value)
}
inline std::string* GurobiParametersProto_Parameter::mutable_value() {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.GurobiParametersProto.Parameter.value)
  return _s;
}
inline const std::string& GurobiParametersProto_Parameter::_internal_value() const {
  return _impl_.value_.Get();
}
inline void GurobiParametersProto_Parameter::_internal_set_value(const std::string& value) {
  
  _impl_.value_.Set(value, GetArenaForAllocation());
}
inline std::string* GurobiParametersProto_Parameter::_internal_mutable_value() {
  
  return _impl_.value_.Mutable(GetArenaForAllocation());
}
inline std::string* GurobiParametersProto_Parameter::release_value() {
  // @@protoc_insertion_point(field_release:operations_research.math_opt.GurobiParametersProto.Parameter.value)
  return _impl_.value_.Release();
}
inline void GurobiParametersProto_Parameter::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  _impl_.value_.SetAllocated(value, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.GurobiParametersProto.Parameter.value)
}

// -------------------------------------------------------------------

// GurobiParametersProto

// repeated .operations_research.math_opt.GurobiParametersProto.Parameter parameters = 1;
inline int GurobiParametersProto::_internal_parameters_size() const {
  return _impl_.parameters_.size();
}
inline int GurobiParametersProto::parameters_size() const {
  return _internal_parameters_size();
}
inline void GurobiParametersProto::clear_parameters() {
  _impl_.parameters_.Clear();
}
inline ::operations_research::math_opt::GurobiParametersProto_Parameter* GurobiParametersProto::mutable_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.GurobiParametersProto.parameters)
  return _impl_.parameters_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::operations_research::math_opt::GurobiParametersProto_Parameter >*
GurobiParametersProto::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.GurobiParametersProto.parameters)
  return &_impl_.parameters_;
}
inline const ::operations_research::math_opt::GurobiParametersProto_Parameter& GurobiParametersProto::_internal_parameters(int index) const {
  return _impl_.parameters_.Get(index);
}
inline const ::operations_research::math_opt::GurobiParametersProto_Parameter& GurobiParametersProto::parameters(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.GurobiParametersProto.parameters)
  return _internal_parameters(index);
}
inline ::operations_research::math_opt::GurobiParametersProto_Parameter* GurobiParametersProto::_internal_add_parameters() {
  return _impl_.parameters_.Add();
}
inline ::operations_research::math_opt::GurobiParametersProto_Parameter* GurobiParametersProto::add_parameters() {
  ::operations_research::math_opt::GurobiParametersProto_Parameter* _add = _internal_add_parameters();
  // @@protoc_insertion_point(field_add:operations_research.math_opt.GurobiParametersProto.parameters)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::operations_research::math_opt::GurobiParametersProto_Parameter >&
GurobiParametersProto::parameters() const {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.GurobiParametersProto.parameters)
  return _impl_.parameters_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace math_opt
}  // namespace operations_research

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2fsolvers_2fgurobi_2eproto
