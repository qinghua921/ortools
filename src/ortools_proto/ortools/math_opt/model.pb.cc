// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/math_opt/model.proto

#include "ortools/math_opt/model.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace operations_research {
namespace math_opt {
PROTOBUF_CONSTEXPR VariablesProto::VariablesProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ids_)*/{}
  , /*decltype(_impl_._ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.lower_bounds_)*/{}
  , /*decltype(_impl_.upper_bounds_)*/{}
  , /*decltype(_impl_.integers_)*/{}
  , /*decltype(_impl_.names_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VariablesProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VariablesProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VariablesProtoDefaultTypeInternal() {}
  union {
    VariablesProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VariablesProtoDefaultTypeInternal _VariablesProto_default_instance_;
PROTOBUF_CONSTEXPR ObjectiveProto::ObjectiveProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.linear_coefficients_)*/nullptr
  , /*decltype(_impl_.quadratic_coefficients_)*/nullptr
  , /*decltype(_impl_.offset_)*/0
  , /*decltype(_impl_.priority_)*/int64_t{0}
  , /*decltype(_impl_.maximize_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ObjectiveProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObjectiveProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObjectiveProtoDefaultTypeInternal() {}
  union {
    ObjectiveProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObjectiveProtoDefaultTypeInternal _ObjectiveProto_default_instance_;
PROTOBUF_CONSTEXPR LinearConstraintsProto::LinearConstraintsProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ids_)*/{}
  , /*decltype(_impl_._ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.lower_bounds_)*/{}
  , /*decltype(_impl_.upper_bounds_)*/{}
  , /*decltype(_impl_.names_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LinearConstraintsProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LinearConstraintsProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LinearConstraintsProtoDefaultTypeInternal() {}
  union {
    LinearConstraintsProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LinearConstraintsProtoDefaultTypeInternal _LinearConstraintsProto_default_instance_;
PROTOBUF_CONSTEXPR QuadraticConstraintProto::QuadraticConstraintProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.linear_terms_)*/nullptr
  , /*decltype(_impl_.quadratic_terms_)*/nullptr
  , /*decltype(_impl_.lower_bound_)*/0
  , /*decltype(_impl_.upper_bound_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QuadraticConstraintProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuadraticConstraintProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuadraticConstraintProtoDefaultTypeInternal() {}
  union {
    QuadraticConstraintProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuadraticConstraintProtoDefaultTypeInternal _QuadraticConstraintProto_default_instance_;
PROTOBUF_CONSTEXPR SosConstraintProto::SosConstraintProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.expressions_)*/{}
  , /*decltype(_impl_.weights_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SosConstraintProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SosConstraintProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SosConstraintProtoDefaultTypeInternal() {}
  union {
    SosConstraintProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SosConstraintProtoDefaultTypeInternal _SosConstraintProto_default_instance_;
PROTOBUF_CONSTEXPR IndicatorConstraintProto::IndicatorConstraintProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.expression_)*/nullptr
  , /*decltype(_impl_.indicator_id_)*/int64_t{0}
  , /*decltype(_impl_.lower_bound_)*/0
  , /*decltype(_impl_.upper_bound_)*/0
  , /*decltype(_impl_.activate_on_zero_)*/false} {}
struct IndicatorConstraintProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IndicatorConstraintProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IndicatorConstraintProtoDefaultTypeInternal() {}
  union {
    IndicatorConstraintProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IndicatorConstraintProtoDefaultTypeInternal _IndicatorConstraintProto_default_instance_;
PROTOBUF_CONSTEXPR ModelProto_AuxiliaryObjectivesEntry_DoNotUse::ModelProto_AuxiliaryObjectivesEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct ModelProto_AuxiliaryObjectivesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelProto_AuxiliaryObjectivesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelProto_AuxiliaryObjectivesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ModelProto_AuxiliaryObjectivesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelProto_AuxiliaryObjectivesEntry_DoNotUseDefaultTypeInternal _ModelProto_AuxiliaryObjectivesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ModelProto_QuadraticConstraintsEntry_DoNotUse::ModelProto_QuadraticConstraintsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct ModelProto_QuadraticConstraintsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelProto_QuadraticConstraintsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelProto_QuadraticConstraintsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ModelProto_QuadraticConstraintsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelProto_QuadraticConstraintsEntry_DoNotUseDefaultTypeInternal _ModelProto_QuadraticConstraintsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ModelProto_Sos1ConstraintsEntry_DoNotUse::ModelProto_Sos1ConstraintsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct ModelProto_Sos1ConstraintsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelProto_Sos1ConstraintsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelProto_Sos1ConstraintsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ModelProto_Sos1ConstraintsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelProto_Sos1ConstraintsEntry_DoNotUseDefaultTypeInternal _ModelProto_Sos1ConstraintsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ModelProto_Sos2ConstraintsEntry_DoNotUse::ModelProto_Sos2ConstraintsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct ModelProto_Sos2ConstraintsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelProto_Sos2ConstraintsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelProto_Sos2ConstraintsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ModelProto_Sos2ConstraintsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelProto_Sos2ConstraintsEntry_DoNotUseDefaultTypeInternal _ModelProto_Sos2ConstraintsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ModelProto_IndicatorConstraintsEntry_DoNotUse::ModelProto_IndicatorConstraintsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct ModelProto_IndicatorConstraintsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelProto_IndicatorConstraintsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelProto_IndicatorConstraintsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ModelProto_IndicatorConstraintsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelProto_IndicatorConstraintsEntry_DoNotUseDefaultTypeInternal _ModelProto_IndicatorConstraintsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ModelProto::ModelProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.quadratic_constraints_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.sos1_constraints_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.sos2_constraints_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.indicator_constraints_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.auxiliary_objectives_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.variables_)*/nullptr
  , /*decltype(_impl_.objective_)*/nullptr
  , /*decltype(_impl_.linear_constraints_)*/nullptr
  , /*decltype(_impl_.linear_constraint_matrix_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelProtoDefaultTypeInternal() {}
  union {
    ModelProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelProtoDefaultTypeInternal _ModelProto_default_instance_;
}  // namespace math_opt
}  // namespace operations_research
static ::_pb::Metadata file_level_metadata_ortools_2fmath_5fopt_2fmodel_2eproto[12];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_ortools_2fmath_5fopt_2fmodel_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_ortools_2fmath_5fopt_2fmodel_2eproto = nullptr;

const uint32_t TableStruct_ortools_2fmath_5fopt_2fmodel_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::VariablesProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::VariablesProto, _impl_.ids_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::VariablesProto, _impl_.lower_bounds_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::VariablesProto, _impl_.upper_bounds_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::VariablesProto, _impl_.integers_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::VariablesProto, _impl_.names_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ObjectiveProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ObjectiveProto, _impl_.maximize_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ObjectiveProto, _impl_.offset_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ObjectiveProto, _impl_.linear_coefficients_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ObjectiveProto, _impl_.quadratic_coefficients_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ObjectiveProto, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ObjectiveProto, _impl_.priority_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::LinearConstraintsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::LinearConstraintsProto, _impl_.ids_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::LinearConstraintsProto, _impl_.lower_bounds_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::LinearConstraintsProto, _impl_.upper_bounds_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::LinearConstraintsProto, _impl_.names_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::QuadraticConstraintProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::QuadraticConstraintProto, _impl_.linear_terms_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::QuadraticConstraintProto, _impl_.quadratic_terms_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::QuadraticConstraintProto, _impl_.lower_bound_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::QuadraticConstraintProto, _impl_.upper_bound_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::QuadraticConstraintProto, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::SosConstraintProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::SosConstraintProto, _impl_.expressions_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::SosConstraintProto, _impl_.weights_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::SosConstraintProto, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::IndicatorConstraintProto, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::IndicatorConstraintProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::IndicatorConstraintProto, _impl_.indicator_id_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::IndicatorConstraintProto, _impl_.activate_on_zero_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::IndicatorConstraintProto, _impl_.expression_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::IndicatorConstraintProto, _impl_.lower_bound_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::IndicatorConstraintProto, _impl_.upper_bound_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::IndicatorConstraintProto, _impl_.name_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_AuxiliaryObjectivesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_AuxiliaryObjectivesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_AuxiliaryObjectivesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_AuxiliaryObjectivesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_QuadraticConstraintsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_QuadraticConstraintsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_QuadraticConstraintsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_QuadraticConstraintsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_Sos1ConstraintsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_Sos1ConstraintsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_Sos1ConstraintsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_Sos1ConstraintsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_Sos2ConstraintsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_Sos2ConstraintsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_Sos2ConstraintsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_Sos2ConstraintsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_IndicatorConstraintsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_IndicatorConstraintsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_IndicatorConstraintsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto_IndicatorConstraintsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto, _impl_.variables_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto, _impl_.objective_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto, _impl_.auxiliary_objectives_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto, _impl_.linear_constraints_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto, _impl_.linear_constraint_matrix_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto, _impl_.quadratic_constraints_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto, _impl_.sos1_constraints_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto, _impl_.sos2_constraints_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::ModelProto, _impl_.indicator_constraints_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::operations_research::math_opt::VariablesProto)},
  { 11, -1, -1, sizeof(::operations_research::math_opt::ObjectiveProto)},
  { 23, -1, -1, sizeof(::operations_research::math_opt::LinearConstraintsProto)},
  { 33, -1, -1, sizeof(::operations_research::math_opt::QuadraticConstraintProto)},
  { 44, -1, -1, sizeof(::operations_research::math_opt::SosConstraintProto)},
  { 53, 65, -1, sizeof(::operations_research::math_opt::IndicatorConstraintProto)},
  { 71, 79, -1, sizeof(::operations_research::math_opt::ModelProto_AuxiliaryObjectivesEntry_DoNotUse)},
  { 81, 89, -1, sizeof(::operations_research::math_opt::ModelProto_QuadraticConstraintsEntry_DoNotUse)},
  { 91, 99, -1, sizeof(::operations_research::math_opt::ModelProto_Sos1ConstraintsEntry_DoNotUse)},
  { 101, 109, -1, sizeof(::operations_research::math_opt::ModelProto_Sos2ConstraintsEntry_DoNotUse)},
  { 111, 119, -1, sizeof(::operations_research::math_opt::ModelProto_IndicatorConstraintsEntry_DoNotUse)},
  { 121, -1, -1, sizeof(::operations_research::math_opt::ModelProto)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::operations_research::math_opt::_VariablesProto_default_instance_._instance,
  &::operations_research::math_opt::_ObjectiveProto_default_instance_._instance,
  &::operations_research::math_opt::_LinearConstraintsProto_default_instance_._instance,
  &::operations_research::math_opt::_QuadraticConstraintProto_default_instance_._instance,
  &::operations_research::math_opt::_SosConstraintProto_default_instance_._instance,
  &::operations_research::math_opt::_IndicatorConstraintProto_default_instance_._instance,
  &::operations_research::math_opt::_ModelProto_AuxiliaryObjectivesEntry_DoNotUse_default_instance_._instance,
  &::operations_research::math_opt::_ModelProto_QuadraticConstraintsEntry_DoNotUse_default_instance_._instance,
  &::operations_research::math_opt::_ModelProto_Sos1ConstraintsEntry_DoNotUse_default_instance_._instance,
  &::operations_research::math_opt::_ModelProto_Sos2ConstraintsEntry_DoNotUse_default_instance_._instance,
  &::operations_research::math_opt::_ModelProto_IndicatorConstraintsEntry_DoNotUse_default_instance_._instance,
  &::operations_research::math_opt::_ModelProto_default_instance_._instance,
};

const char descriptor_table_protodef_ortools_2fmath_5fopt_2fmodel_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034ortools/math_opt/model.proto\022\034operatio"
  "ns_research.math_opt\032(ortools/math_opt/s"
  "parse_containers.proto\"j\n\016VariablesProto"
  "\022\013\n\003ids\030\001 \003(\003\022\024\n\014lower_bounds\030\002 \003(\001\022\024\n\014u"
  "pper_bounds\030\003 \003(\001\022\020\n\010integers\030\004 \003(\010\022\r\n\005n"
  "ames\030\005 \003(\t\"\375\001\n\016ObjectiveProto\022\020\n\010maximiz"
  "e\030\001 \001(\010\022\016\n\006offset\030\002 \001(\001\022R\n\023linear_coeffi"
  "cients\030\003 \001(\01325.operations_research.math_"
  "opt.SparseDoubleVectorProto\022U\n\026quadratic"
  "_coefficients\030\004 \001(\01325.operations_researc"
  "h.math_opt.SparseDoubleMatrixProto\022\014\n\004na"
  "me\030\005 \001(\t\022\020\n\010priority\030\006 \001(\003\"`\n\026LinearCons"
  "traintsProto\022\013\n\003ids\030\001 \003(\003\022\024\n\014lower_bound"
  "s\030\002 \003(\001\022\024\n\014upper_bounds\030\003 \003(\001\022\r\n\005names\030\004"
  " \003(\t\"\357\001\n\030QuadraticConstraintProto\022K\n\014lin"
  "ear_terms\030\001 \001(\01325.operations_research.ma"
  "th_opt.SparseDoubleVectorProto\022N\n\017quadra"
  "tic_terms\030\002 \001(\01325.operations_research.ma"
  "th_opt.SparseDoubleMatrixProto\022\023\n\013lower_"
  "bound\030\003 \001(\001\022\023\n\013upper_bound\030\004 \001(\001\022\014\n\004name"
  "\030\005 \001(\t\"}\n\022SosConstraintProto\022H\n\013expressi"
  "ons\030\001 \003(\01323.operations_research.math_opt"
  ".LinearExpressionProto\022\017\n\007weights\030\002 \003(\001\022"
  "\014\n\004name\030\003 \001(\t\"\343\001\n\030IndicatorConstraintPro"
  "to\022\031\n\014indicator_id\030\001 \001(\003H\000\210\001\001\022\030\n\020activat"
  "e_on_zero\030\006 \001(\010\022I\n\nexpression\030\002 \001(\01325.op"
  "erations_research.math_opt.SparseDoubleV"
  "ectorProto\022\023\n\013lower_bound\030\003 \001(\001\022\023\n\013upper"
  "_bound\030\004 \001(\001\022\014\n\004name\030\005 \001(\tB\017\n\r_indicator"
  "_id\"\310\n\n\nModelProto\022\014\n\004name\030\001 \001(\t\022\?\n\tvari"
  "ables\030\002 \001(\0132,.operations_research.math_o"
  "pt.VariablesProto\022\?\n\tobjective\030\003 \001(\0132,.o"
  "perations_research.math_opt.ObjectivePro"
  "to\022_\n\024auxiliary_objectives\030\n \003(\0132A.opera"
  "tions_research.math_opt.ModelProto.Auxil"
  "iaryObjectivesEntry\022P\n\022linear_constraint"
  "s\030\004 \001(\01324.operations_research.math_opt.L"
  "inearConstraintsProto\022W\n\030linear_constrai"
  "nt_matrix\030\005 \001(\01325.operations_research.ma"
  "th_opt.SparseDoubleMatrixProto\022a\n\025quadra"
  "tic_constraints\030\006 \003(\0132B.operations_resea"
  "rch.math_opt.ModelProto.QuadraticConstra"
  "intsEntry\022W\n\020sos1_constraints\030\007 \003(\0132=.op"
  "erations_research.math_opt.ModelProto.So"
  "s1ConstraintsEntry\022W\n\020sos2_constraints\030\010"
  " \003(\0132=.operations_research.math_opt.Mode"
  "lProto.Sos2ConstraintsEntry\022a\n\025indicator"
  "_constraints\030\t \003(\0132B.operations_research"
  ".math_opt.ModelProto.IndicatorConstraint"
  "sEntry\032h\n\030AuxiliaryObjectivesEntry\022\013\n\003ke"
  "y\030\001 \001(\003\022;\n\005value\030\002 \001(\0132,.operations_rese"
  "arch.math_opt.ObjectiveProto:\0028\001\032s\n\031Quad"
  "raticConstraintsEntry\022\013\n\003key\030\001 \001(\003\022E\n\005va"
  "lue\030\002 \001(\01326.operations_research.math_opt"
  ".QuadraticConstraintProto:\0028\001\032h\n\024Sos1Con"
  "straintsEntry\022\013\n\003key\030\001 \001(\003\022\?\n\005value\030\002 \001("
  "\01320.operations_research.math_opt.SosCons"
  "traintProto:\0028\001\032h\n\024Sos2ConstraintsEntry\022"
  "\013\n\003key\030\001 \001(\003\022\?\n\005value\030\002 \001(\01320.operations"
  "_research.math_opt.SosConstraintProto:\0028"
  "\001\032s\n\031IndicatorConstraintsEntry\022\013\n\003key\030\001 "
  "\001(\003\022E\n\005value\030\002 \001(\01326.operations_research"
  ".math_opt.IndicatorConstraintProto:\0028\001B\036"
  "\n\032com.google.ortools.mathoptP\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_deps[1] = {
  &::descriptor_table_ortools_2fmath_5fopt_2fsparse_5fcontainers_2eproto,
};
static ::_pbi::once_flag descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto = {
    false, false, 2558, descriptor_table_protodef_ortools_2fmath_5fopt_2fmodel_2eproto,
    "ortools/math_opt/model.proto",
    &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_once, descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_deps, 1, 12,
    schemas, file_default_instances, TableStruct_ortools_2fmath_5fopt_2fmodel_2eproto::offsets,
    file_level_metadata_ortools_2fmath_5fopt_2fmodel_2eproto, file_level_enum_descriptors_ortools_2fmath_5fopt_2fmodel_2eproto,
    file_level_service_descriptors_ortools_2fmath_5fopt_2fmodel_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_getter() {
  return &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ortools_2fmath_5fopt_2fmodel_2eproto(&descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto);
namespace operations_research {
namespace math_opt {

// ===================================================================

class VariablesProto::_Internal {
 public:
};

VariablesProto::VariablesProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:operations_research.math_opt.VariablesProto)
}
VariablesProto::VariablesProto(const VariablesProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VariablesProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ids_){from._impl_.ids_}
    , /*decltype(_impl_._ids_cached_byte_size_)*/{0}
    , decltype(_impl_.lower_bounds_){from._impl_.lower_bounds_}
    , decltype(_impl_.upper_bounds_){from._impl_.upper_bounds_}
    , decltype(_impl_.integers_){from._impl_.integers_}
    , decltype(_impl_.names_){from._impl_.names_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:operations_research.math_opt.VariablesProto)
}

inline void VariablesProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ids_){arena}
    , /*decltype(_impl_._ids_cached_byte_size_)*/{0}
    , decltype(_impl_.lower_bounds_){arena}
    , decltype(_impl_.upper_bounds_){arena}
    , decltype(_impl_.integers_){arena}
    , decltype(_impl_.names_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

VariablesProto::~VariablesProto() {
  // @@protoc_insertion_point(destructor:operations_research.math_opt.VariablesProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VariablesProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ids_.~RepeatedField();
  _impl_.lower_bounds_.~RepeatedField();
  _impl_.upper_bounds_.~RepeatedField();
  _impl_.integers_.~RepeatedField();
  _impl_.names_.~RepeatedPtrField();
}

void VariablesProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VariablesProto::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.math_opt.VariablesProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ids_.Clear();
  _impl_.lower_bounds_.Clear();
  _impl_.upper_bounds_.Clear();
  _impl_.integers_.Clear();
  _impl_.names_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VariablesProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated double lower_bounds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_lower_bounds(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 17) {
          _internal_add_lower_bounds(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // repeated double upper_bounds = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_upper_bounds(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 25) {
          _internal_add_upper_bounds(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // repeated bool integers = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(_internal_mutable_integers(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 32) {
          _internal_add_integers(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string names = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_names();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "operations_research.math_opt.VariablesProto.names"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VariablesProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.math_opt.VariablesProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 ids = 1;
  {
    int byte_size = _impl_._ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          1, _internal_ids(), byte_size, target);
    }
  }

  // repeated double lower_bounds = 2;
  if (this->_internal_lower_bounds_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_lower_bounds(), target);
  }

  // repeated double upper_bounds = 3;
  if (this->_internal_upper_bounds_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_upper_bounds(), target);
  }

  // repeated bool integers = 4;
  if (this->_internal_integers_size() > 0) {
    target = stream->WriteFixedPacked(4, _internal_integers(), target);
  }

  // repeated string names = 5;
  for (int i = 0, n = this->_internal_names_size(); i < n; i++) {
    const auto& s = this->_internal_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "operations_research.math_opt.VariablesProto.names");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.math_opt.VariablesProto)
  return target;
}

size_t VariablesProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.math_opt.VariablesProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated double lower_bounds = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_lower_bounds_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated double upper_bounds = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_upper_bounds_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated bool integers = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_integers_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated string names = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.names_.size());
  for (int i = 0, n = _impl_.names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.names_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VariablesProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VariablesProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VariablesProto::GetClassData() const { return &_class_data_; }


void VariablesProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VariablesProto*>(&to_msg);
  auto& from = static_cast<const VariablesProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:operations_research.math_opt.VariablesProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.ids_.MergeFrom(from._impl_.ids_);
  _this->_impl_.lower_bounds_.MergeFrom(from._impl_.lower_bounds_);
  _this->_impl_.upper_bounds_.MergeFrom(from._impl_.upper_bounds_);
  _this->_impl_.integers_.MergeFrom(from._impl_.integers_);
  _this->_impl_.names_.MergeFrom(from._impl_.names_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VariablesProto::CopyFrom(const VariablesProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.math_opt.VariablesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VariablesProto::IsInitialized() const {
  return true;
}

void VariablesProto::InternalSwap(VariablesProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ids_.InternalSwap(&other->_impl_.ids_);
  _impl_.lower_bounds_.InternalSwap(&other->_impl_.lower_bounds_);
  _impl_.upper_bounds_.InternalSwap(&other->_impl_.upper_bounds_);
  _impl_.integers_.InternalSwap(&other->_impl_.integers_);
  _impl_.names_.InternalSwap(&other->_impl_.names_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VariablesProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fmodel_2eproto[0]);
}

// ===================================================================

class ObjectiveProto::_Internal {
 public:
  static const ::operations_research::math_opt::SparseDoubleVectorProto& linear_coefficients(const ObjectiveProto* msg);
  static const ::operations_research::math_opt::SparseDoubleMatrixProto& quadratic_coefficients(const ObjectiveProto* msg);
};

const ::operations_research::math_opt::SparseDoubleVectorProto&
ObjectiveProto::_Internal::linear_coefficients(const ObjectiveProto* msg) {
  return *msg->_impl_.linear_coefficients_;
}
const ::operations_research::math_opt::SparseDoubleMatrixProto&
ObjectiveProto::_Internal::quadratic_coefficients(const ObjectiveProto* msg) {
  return *msg->_impl_.quadratic_coefficients_;
}
void ObjectiveProto::clear_linear_coefficients() {
  if (GetArenaForAllocation() == nullptr && _impl_.linear_coefficients_ != nullptr) {
    delete _impl_.linear_coefficients_;
  }
  _impl_.linear_coefficients_ = nullptr;
}
void ObjectiveProto::clear_quadratic_coefficients() {
  if (GetArenaForAllocation() == nullptr && _impl_.quadratic_coefficients_ != nullptr) {
    delete _impl_.quadratic_coefficients_;
  }
  _impl_.quadratic_coefficients_ = nullptr;
}
ObjectiveProto::ObjectiveProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:operations_research.math_opt.ObjectiveProto)
}
ObjectiveProto::ObjectiveProto(const ObjectiveProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ObjectiveProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.linear_coefficients_){nullptr}
    , decltype(_impl_.quadratic_coefficients_){nullptr}
    , decltype(_impl_.offset_){}
    , decltype(_impl_.priority_){}
    , decltype(_impl_.maximize_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_linear_coefficients()) {
    _this->_impl_.linear_coefficients_ = new ::operations_research::math_opt::SparseDoubleVectorProto(*from._impl_.linear_coefficients_);
  }
  if (from._internal_has_quadratic_coefficients()) {
    _this->_impl_.quadratic_coefficients_ = new ::operations_research::math_opt::SparseDoubleMatrixProto(*from._impl_.quadratic_coefficients_);
  }
  ::memcpy(&_impl_.offset_, &from._impl_.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.maximize_) -
    reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.maximize_));
  // @@protoc_insertion_point(copy_constructor:operations_research.math_opt.ObjectiveProto)
}

inline void ObjectiveProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.linear_coefficients_){nullptr}
    , decltype(_impl_.quadratic_coefficients_){nullptr}
    , decltype(_impl_.offset_){0}
    , decltype(_impl_.priority_){int64_t{0}}
    , decltype(_impl_.maximize_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ObjectiveProto::~ObjectiveProto() {
  // @@protoc_insertion_point(destructor:operations_research.math_opt.ObjectiveProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ObjectiveProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.linear_coefficients_;
  if (this != internal_default_instance()) delete _impl_.quadratic_coefficients_;
}

void ObjectiveProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ObjectiveProto::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.math_opt.ObjectiveProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.linear_coefficients_ != nullptr) {
    delete _impl_.linear_coefficients_;
  }
  _impl_.linear_coefficients_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.quadratic_coefficients_ != nullptr) {
    delete _impl_.quadratic_coefficients_;
  }
  _impl_.quadratic_coefficients_ = nullptr;
  ::memset(&_impl_.offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.maximize_) -
      reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.maximize_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectiveProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool maximize = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.maximize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double offset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _impl_.offset_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // .operations_research.math_opt.SparseDoubleVectorProto linear_coefficients = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_linear_coefficients(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .operations_research.math_opt.SparseDoubleMatrixProto quadratic_coefficients = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_quadratic_coefficients(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "operations_research.math_opt.ObjectiveProto.name"));
        } else
          goto handle_unusual;
        continue;
      // int64 priority = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ObjectiveProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.math_opt.ObjectiveProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool maximize = 1;
  if (this->_internal_maximize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_maximize(), target);
  }

  // double offset = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_offset = this->_internal_offset();
  uint64_t raw_offset;
  memcpy(&raw_offset, &tmp_offset, sizeof(tmp_offset));
  if (raw_offset != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_offset(), target);
  }

  // .operations_research.math_opt.SparseDoubleVectorProto linear_coefficients = 3;
  if (this->_internal_has_linear_coefficients()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::linear_coefficients(this),
        _Internal::linear_coefficients(this).GetCachedSize(), target, stream);
  }

  // .operations_research.math_opt.SparseDoubleMatrixProto quadratic_coefficients = 4;
  if (this->_internal_has_quadratic_coefficients()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::quadratic_coefficients(this),
        _Internal::quadratic_coefficients(this).GetCachedSize(), target, stream);
  }

  // string name = 5;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "operations_research.math_opt.ObjectiveProto.name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_name(), target);
  }

  // int64 priority = 6;
  if (this->_internal_priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_priority(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.math_opt.ObjectiveProto)
  return target;
}

size_t ObjectiveProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.math_opt.ObjectiveProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 5;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .operations_research.math_opt.SparseDoubleVectorProto linear_coefficients = 3;
  if (this->_internal_has_linear_coefficients()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.linear_coefficients_);
  }

  // .operations_research.math_opt.SparseDoubleMatrixProto quadratic_coefficients = 4;
  if (this->_internal_has_quadratic_coefficients()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.quadratic_coefficients_);
  }

  // double offset = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_offset = this->_internal_offset();
  uint64_t raw_offset;
  memcpy(&raw_offset, &tmp_offset, sizeof(tmp_offset));
  if (raw_offset != 0) {
    total_size += 1 + 8;
  }

  // int64 priority = 6;
  if (this->_internal_priority() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_priority());
  }

  // bool maximize = 1;
  if (this->_internal_maximize() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ObjectiveProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ObjectiveProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ObjectiveProto::GetClassData() const { return &_class_data_; }


void ObjectiveProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ObjectiveProto*>(&to_msg);
  auto& from = static_cast<const ObjectiveProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:operations_research.math_opt.ObjectiveProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_linear_coefficients()) {
    _this->_internal_mutable_linear_coefficients()->::operations_research::math_opt::SparseDoubleVectorProto::MergeFrom(
        from._internal_linear_coefficients());
  }
  if (from._internal_has_quadratic_coefficients()) {
    _this->_internal_mutable_quadratic_coefficients()->::operations_research::math_opt::SparseDoubleMatrixProto::MergeFrom(
        from._internal_quadratic_coefficients());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_offset = from._internal_offset();
  uint64_t raw_offset;
  memcpy(&raw_offset, &tmp_offset, sizeof(tmp_offset));
  if (raw_offset != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  if (from._internal_priority() != 0) {
    _this->_internal_set_priority(from._internal_priority());
  }
  if (from._internal_maximize() != 0) {
    _this->_internal_set_maximize(from._internal_maximize());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ObjectiveProto::CopyFrom(const ObjectiveProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.math_opt.ObjectiveProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectiveProto::IsInitialized() const {
  return true;
}

void ObjectiveProto::InternalSwap(ObjectiveProto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObjectiveProto, _impl_.maximize_)
      + sizeof(ObjectiveProto::_impl_.maximize_)
      - PROTOBUF_FIELD_OFFSET(ObjectiveProto, _impl_.linear_coefficients_)>(
          reinterpret_cast<char*>(&_impl_.linear_coefficients_),
          reinterpret_cast<char*>(&other->_impl_.linear_coefficients_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectiveProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fmodel_2eproto[1]);
}

// ===================================================================

class LinearConstraintsProto::_Internal {
 public:
};

LinearConstraintsProto::LinearConstraintsProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:operations_research.math_opt.LinearConstraintsProto)
}
LinearConstraintsProto::LinearConstraintsProto(const LinearConstraintsProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LinearConstraintsProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ids_){from._impl_.ids_}
    , /*decltype(_impl_._ids_cached_byte_size_)*/{0}
    , decltype(_impl_.lower_bounds_){from._impl_.lower_bounds_}
    , decltype(_impl_.upper_bounds_){from._impl_.upper_bounds_}
    , decltype(_impl_.names_){from._impl_.names_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:operations_research.math_opt.LinearConstraintsProto)
}

inline void LinearConstraintsProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ids_){arena}
    , /*decltype(_impl_._ids_cached_byte_size_)*/{0}
    , decltype(_impl_.lower_bounds_){arena}
    , decltype(_impl_.upper_bounds_){arena}
    , decltype(_impl_.names_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LinearConstraintsProto::~LinearConstraintsProto() {
  // @@protoc_insertion_point(destructor:operations_research.math_opt.LinearConstraintsProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LinearConstraintsProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ids_.~RepeatedField();
  _impl_.lower_bounds_.~RepeatedField();
  _impl_.upper_bounds_.~RepeatedField();
  _impl_.names_.~RepeatedPtrField();
}

void LinearConstraintsProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LinearConstraintsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.math_opt.LinearConstraintsProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ids_.Clear();
  _impl_.lower_bounds_.Clear();
  _impl_.upper_bounds_.Clear();
  _impl_.names_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LinearConstraintsProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated double lower_bounds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_lower_bounds(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 17) {
          _internal_add_lower_bounds(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // repeated double upper_bounds = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_upper_bounds(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 25) {
          _internal_add_upper_bounds(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // repeated string names = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_names();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "operations_research.math_opt.LinearConstraintsProto.names"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LinearConstraintsProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.math_opt.LinearConstraintsProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 ids = 1;
  {
    int byte_size = _impl_._ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          1, _internal_ids(), byte_size, target);
    }
  }

  // repeated double lower_bounds = 2;
  if (this->_internal_lower_bounds_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_lower_bounds(), target);
  }

  // repeated double upper_bounds = 3;
  if (this->_internal_upper_bounds_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_upper_bounds(), target);
  }

  // repeated string names = 4;
  for (int i = 0, n = this->_internal_names_size(); i < n; i++) {
    const auto& s = this->_internal_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "operations_research.math_opt.LinearConstraintsProto.names");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.math_opt.LinearConstraintsProto)
  return target;
}

size_t LinearConstraintsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.math_opt.LinearConstraintsProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated double lower_bounds = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_lower_bounds_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated double upper_bounds = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_upper_bounds_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated string names = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.names_.size());
  for (int i = 0, n = _impl_.names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.names_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LinearConstraintsProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LinearConstraintsProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LinearConstraintsProto::GetClassData() const { return &_class_data_; }


void LinearConstraintsProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LinearConstraintsProto*>(&to_msg);
  auto& from = static_cast<const LinearConstraintsProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:operations_research.math_opt.LinearConstraintsProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.ids_.MergeFrom(from._impl_.ids_);
  _this->_impl_.lower_bounds_.MergeFrom(from._impl_.lower_bounds_);
  _this->_impl_.upper_bounds_.MergeFrom(from._impl_.upper_bounds_);
  _this->_impl_.names_.MergeFrom(from._impl_.names_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LinearConstraintsProto::CopyFrom(const LinearConstraintsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.math_opt.LinearConstraintsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinearConstraintsProto::IsInitialized() const {
  return true;
}

void LinearConstraintsProto::InternalSwap(LinearConstraintsProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ids_.InternalSwap(&other->_impl_.ids_);
  _impl_.lower_bounds_.InternalSwap(&other->_impl_.lower_bounds_);
  _impl_.upper_bounds_.InternalSwap(&other->_impl_.upper_bounds_);
  _impl_.names_.InternalSwap(&other->_impl_.names_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LinearConstraintsProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fmodel_2eproto[2]);
}

// ===================================================================

class QuadraticConstraintProto::_Internal {
 public:
  static const ::operations_research::math_opt::SparseDoubleVectorProto& linear_terms(const QuadraticConstraintProto* msg);
  static const ::operations_research::math_opt::SparseDoubleMatrixProto& quadratic_terms(const QuadraticConstraintProto* msg);
};

const ::operations_research::math_opt::SparseDoubleVectorProto&
QuadraticConstraintProto::_Internal::linear_terms(const QuadraticConstraintProto* msg) {
  return *msg->_impl_.linear_terms_;
}
const ::operations_research::math_opt::SparseDoubleMatrixProto&
QuadraticConstraintProto::_Internal::quadratic_terms(const QuadraticConstraintProto* msg) {
  return *msg->_impl_.quadratic_terms_;
}
void QuadraticConstraintProto::clear_linear_terms() {
  if (GetArenaForAllocation() == nullptr && _impl_.linear_terms_ != nullptr) {
    delete _impl_.linear_terms_;
  }
  _impl_.linear_terms_ = nullptr;
}
void QuadraticConstraintProto::clear_quadratic_terms() {
  if (GetArenaForAllocation() == nullptr && _impl_.quadratic_terms_ != nullptr) {
    delete _impl_.quadratic_terms_;
  }
  _impl_.quadratic_terms_ = nullptr;
}
QuadraticConstraintProto::QuadraticConstraintProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:operations_research.math_opt.QuadraticConstraintProto)
}
QuadraticConstraintProto::QuadraticConstraintProto(const QuadraticConstraintProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuadraticConstraintProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.linear_terms_){nullptr}
    , decltype(_impl_.quadratic_terms_){nullptr}
    , decltype(_impl_.lower_bound_){}
    , decltype(_impl_.upper_bound_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_linear_terms()) {
    _this->_impl_.linear_terms_ = new ::operations_research::math_opt::SparseDoubleVectorProto(*from._impl_.linear_terms_);
  }
  if (from._internal_has_quadratic_terms()) {
    _this->_impl_.quadratic_terms_ = new ::operations_research::math_opt::SparseDoubleMatrixProto(*from._impl_.quadratic_terms_);
  }
  ::memcpy(&_impl_.lower_bound_, &from._impl_.lower_bound_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.upper_bound_) -
    reinterpret_cast<char*>(&_impl_.lower_bound_)) + sizeof(_impl_.upper_bound_));
  // @@protoc_insertion_point(copy_constructor:operations_research.math_opt.QuadraticConstraintProto)
}

inline void QuadraticConstraintProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.linear_terms_){nullptr}
    , decltype(_impl_.quadratic_terms_){nullptr}
    , decltype(_impl_.lower_bound_){0}
    , decltype(_impl_.upper_bound_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QuadraticConstraintProto::~QuadraticConstraintProto() {
  // @@protoc_insertion_point(destructor:operations_research.math_opt.QuadraticConstraintProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuadraticConstraintProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.linear_terms_;
  if (this != internal_default_instance()) delete _impl_.quadratic_terms_;
}

void QuadraticConstraintProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuadraticConstraintProto::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.math_opt.QuadraticConstraintProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.linear_terms_ != nullptr) {
    delete _impl_.linear_terms_;
  }
  _impl_.linear_terms_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.quadratic_terms_ != nullptr) {
    delete _impl_.quadratic_terms_;
  }
  _impl_.quadratic_terms_ = nullptr;
  ::memset(&_impl_.lower_bound_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.upper_bound_) -
      reinterpret_cast<char*>(&_impl_.lower_bound_)) + sizeof(_impl_.upper_bound_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuadraticConstraintProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .operations_research.math_opt.SparseDoubleVectorProto linear_terms = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_linear_terms(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .operations_research.math_opt.SparseDoubleMatrixProto quadratic_terms = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_quadratic_terms(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double lower_bound = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _impl_.lower_bound_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double upper_bound = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.upper_bound_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // string name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "operations_research.math_opt.QuadraticConstraintProto.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QuadraticConstraintProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.math_opt.QuadraticConstraintProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .operations_research.math_opt.SparseDoubleVectorProto linear_terms = 1;
  if (this->_internal_has_linear_terms()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::linear_terms(this),
        _Internal::linear_terms(this).GetCachedSize(), target, stream);
  }

  // .operations_research.math_opt.SparseDoubleMatrixProto quadratic_terms = 2;
  if (this->_internal_has_quadratic_terms()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::quadratic_terms(this),
        _Internal::quadratic_terms(this).GetCachedSize(), target, stream);
  }

  // double lower_bound = 3;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lower_bound = this->_internal_lower_bound();
  uint64_t raw_lower_bound;
  memcpy(&raw_lower_bound, &tmp_lower_bound, sizeof(tmp_lower_bound));
  if (raw_lower_bound != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_lower_bound(), target);
  }

  // double upper_bound = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_upper_bound = this->_internal_upper_bound();
  uint64_t raw_upper_bound;
  memcpy(&raw_upper_bound, &tmp_upper_bound, sizeof(tmp_upper_bound));
  if (raw_upper_bound != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_upper_bound(), target);
  }

  // string name = 5;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "operations_research.math_opt.QuadraticConstraintProto.name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.math_opt.QuadraticConstraintProto)
  return target;
}

size_t QuadraticConstraintProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.math_opt.QuadraticConstraintProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 5;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .operations_research.math_opt.SparseDoubleVectorProto linear_terms = 1;
  if (this->_internal_has_linear_terms()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.linear_terms_);
  }

  // .operations_research.math_opt.SparseDoubleMatrixProto quadratic_terms = 2;
  if (this->_internal_has_quadratic_terms()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.quadratic_terms_);
  }

  // double lower_bound = 3;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lower_bound = this->_internal_lower_bound();
  uint64_t raw_lower_bound;
  memcpy(&raw_lower_bound, &tmp_lower_bound, sizeof(tmp_lower_bound));
  if (raw_lower_bound != 0) {
    total_size += 1 + 8;
  }

  // double upper_bound = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_upper_bound = this->_internal_upper_bound();
  uint64_t raw_upper_bound;
  memcpy(&raw_upper_bound, &tmp_upper_bound, sizeof(tmp_upper_bound));
  if (raw_upper_bound != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuadraticConstraintProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuadraticConstraintProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuadraticConstraintProto::GetClassData() const { return &_class_data_; }


void QuadraticConstraintProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuadraticConstraintProto*>(&to_msg);
  auto& from = static_cast<const QuadraticConstraintProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:operations_research.math_opt.QuadraticConstraintProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_linear_terms()) {
    _this->_internal_mutable_linear_terms()->::operations_research::math_opt::SparseDoubleVectorProto::MergeFrom(
        from._internal_linear_terms());
  }
  if (from._internal_has_quadratic_terms()) {
    _this->_internal_mutable_quadratic_terms()->::operations_research::math_opt::SparseDoubleMatrixProto::MergeFrom(
        from._internal_quadratic_terms());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lower_bound = from._internal_lower_bound();
  uint64_t raw_lower_bound;
  memcpy(&raw_lower_bound, &tmp_lower_bound, sizeof(tmp_lower_bound));
  if (raw_lower_bound != 0) {
    _this->_internal_set_lower_bound(from._internal_lower_bound());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_upper_bound = from._internal_upper_bound();
  uint64_t raw_upper_bound;
  memcpy(&raw_upper_bound, &tmp_upper_bound, sizeof(tmp_upper_bound));
  if (raw_upper_bound != 0) {
    _this->_internal_set_upper_bound(from._internal_upper_bound());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuadraticConstraintProto::CopyFrom(const QuadraticConstraintProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.math_opt.QuadraticConstraintProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuadraticConstraintProto::IsInitialized() const {
  return true;
}

void QuadraticConstraintProto::InternalSwap(QuadraticConstraintProto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QuadraticConstraintProto, _impl_.upper_bound_)
      + sizeof(QuadraticConstraintProto::_impl_.upper_bound_)
      - PROTOBUF_FIELD_OFFSET(QuadraticConstraintProto, _impl_.linear_terms_)>(
          reinterpret_cast<char*>(&_impl_.linear_terms_),
          reinterpret_cast<char*>(&other->_impl_.linear_terms_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QuadraticConstraintProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fmodel_2eproto[3]);
}

// ===================================================================

class SosConstraintProto::_Internal {
 public:
};

void SosConstraintProto::clear_expressions() {
  _impl_.expressions_.Clear();
}
SosConstraintProto::SosConstraintProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:operations_research.math_opt.SosConstraintProto)
}
SosConstraintProto::SosConstraintProto(const SosConstraintProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SosConstraintProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.expressions_){from._impl_.expressions_}
    , decltype(_impl_.weights_){from._impl_.weights_}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:operations_research.math_opt.SosConstraintProto)
}

inline void SosConstraintProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.expressions_){arena}
    , decltype(_impl_.weights_){arena}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SosConstraintProto::~SosConstraintProto() {
  // @@protoc_insertion_point(destructor:operations_research.math_opt.SosConstraintProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SosConstraintProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.expressions_.~RepeatedPtrField();
  _impl_.weights_.~RepeatedField();
  _impl_.name_.Destroy();
}

void SosConstraintProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SosConstraintProto::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.math_opt.SosConstraintProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.expressions_.Clear();
  _impl_.weights_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SosConstraintProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .operations_research.math_opt.LinearExpressionProto expressions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_expressions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated double weights = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_weights(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 17) {
          _internal_add_weights(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "operations_research.math_opt.SosConstraintProto.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SosConstraintProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.math_opt.SosConstraintProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .operations_research.math_opt.LinearExpressionProto expressions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_expressions_size()); i < n; i++) {
    const auto& repfield = this->_internal_expressions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated double weights = 2;
  if (this->_internal_weights_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_weights(), target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "operations_research.math_opt.SosConstraintProto.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.math_opt.SosConstraintProto)
  return target;
}

size_t SosConstraintProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.math_opt.SosConstraintProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .operations_research.math_opt.LinearExpressionProto expressions = 1;
  total_size += 1UL * this->_internal_expressions_size();
  for (const auto& msg : this->_impl_.expressions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated double weights = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_weights_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SosConstraintProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SosConstraintProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SosConstraintProto::GetClassData() const { return &_class_data_; }


void SosConstraintProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SosConstraintProto*>(&to_msg);
  auto& from = static_cast<const SosConstraintProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:operations_research.math_opt.SosConstraintProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.expressions_.MergeFrom(from._impl_.expressions_);
  _this->_impl_.weights_.MergeFrom(from._impl_.weights_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SosConstraintProto::CopyFrom(const SosConstraintProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.math_opt.SosConstraintProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SosConstraintProto::IsInitialized() const {
  return true;
}

void SosConstraintProto::InternalSwap(SosConstraintProto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.expressions_.InternalSwap(&other->_impl_.expressions_);
  _impl_.weights_.InternalSwap(&other->_impl_.weights_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SosConstraintProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fmodel_2eproto[4]);
}

// ===================================================================

class IndicatorConstraintProto::_Internal {
 public:
  using HasBits = decltype(std::declval<IndicatorConstraintProto>()._impl_._has_bits_);
  static void set_has_indicator_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::operations_research::math_opt::SparseDoubleVectorProto& expression(const IndicatorConstraintProto* msg);
};

const ::operations_research::math_opt::SparseDoubleVectorProto&
IndicatorConstraintProto::_Internal::expression(const IndicatorConstraintProto* msg) {
  return *msg->_impl_.expression_;
}
void IndicatorConstraintProto::clear_expression() {
  if (GetArenaForAllocation() == nullptr && _impl_.expression_ != nullptr) {
    delete _impl_.expression_;
  }
  _impl_.expression_ = nullptr;
}
IndicatorConstraintProto::IndicatorConstraintProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:operations_research.math_opt.IndicatorConstraintProto)
}
IndicatorConstraintProto::IndicatorConstraintProto(const IndicatorConstraintProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  IndicatorConstraintProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.expression_){nullptr}
    , decltype(_impl_.indicator_id_){}
    , decltype(_impl_.lower_bound_){}
    , decltype(_impl_.upper_bound_){}
    , decltype(_impl_.activate_on_zero_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_expression()) {
    _this->_impl_.expression_ = new ::operations_research::math_opt::SparseDoubleVectorProto(*from._impl_.expression_);
  }
  ::memcpy(&_impl_.indicator_id_, &from._impl_.indicator_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.activate_on_zero_) -
    reinterpret_cast<char*>(&_impl_.indicator_id_)) + sizeof(_impl_.activate_on_zero_));
  // @@protoc_insertion_point(copy_constructor:operations_research.math_opt.IndicatorConstraintProto)
}

inline void IndicatorConstraintProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.expression_){nullptr}
    , decltype(_impl_.indicator_id_){int64_t{0}}
    , decltype(_impl_.lower_bound_){0}
    , decltype(_impl_.upper_bound_){0}
    , decltype(_impl_.activate_on_zero_){false}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

IndicatorConstraintProto::~IndicatorConstraintProto() {
  // @@protoc_insertion_point(destructor:operations_research.math_opt.IndicatorConstraintProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IndicatorConstraintProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.expression_;
}

void IndicatorConstraintProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void IndicatorConstraintProto::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.math_opt.IndicatorConstraintProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.expression_ != nullptr) {
    delete _impl_.expression_;
  }
  _impl_.expression_ = nullptr;
  _impl_.indicator_id_ = int64_t{0};
  ::memset(&_impl_.lower_bound_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.activate_on_zero_) -
      reinterpret_cast<char*>(&_impl_.lower_bound_)) + sizeof(_impl_.activate_on_zero_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IndicatorConstraintProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 indicator_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_indicator_id(&has_bits);
          _impl_.indicator_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .operations_research.math_opt.SparseDoubleVectorProto expression = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_expression(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double lower_bound = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _impl_.lower_bound_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double upper_bound = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.upper_bound_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // string name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "operations_research.math_opt.IndicatorConstraintProto.name"));
        } else
          goto handle_unusual;
        continue;
      // bool activate_on_zero = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.activate_on_zero_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IndicatorConstraintProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.math_opt.IndicatorConstraintProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int64 indicator_id = 1;
  if (_internal_has_indicator_id()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_indicator_id(), target);
  }

  // .operations_research.math_opt.SparseDoubleVectorProto expression = 2;
  if (this->_internal_has_expression()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::expression(this),
        _Internal::expression(this).GetCachedSize(), target, stream);
  }

  // double lower_bound = 3;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lower_bound = this->_internal_lower_bound();
  uint64_t raw_lower_bound;
  memcpy(&raw_lower_bound, &tmp_lower_bound, sizeof(tmp_lower_bound));
  if (raw_lower_bound != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_lower_bound(), target);
  }

  // double upper_bound = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_upper_bound = this->_internal_upper_bound();
  uint64_t raw_upper_bound;
  memcpy(&raw_upper_bound, &tmp_upper_bound, sizeof(tmp_upper_bound));
  if (raw_upper_bound != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_upper_bound(), target);
  }

  // string name = 5;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "operations_research.math_opt.IndicatorConstraintProto.name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_name(), target);
  }

  // bool activate_on_zero = 6;
  if (this->_internal_activate_on_zero() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_activate_on_zero(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.math_opt.IndicatorConstraintProto)
  return target;
}

size_t IndicatorConstraintProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.math_opt.IndicatorConstraintProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 5;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .operations_research.math_opt.SparseDoubleVectorProto expression = 2;
  if (this->_internal_has_expression()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.expression_);
  }

  // optional int64 indicator_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_indicator_id());
  }

  // double lower_bound = 3;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lower_bound = this->_internal_lower_bound();
  uint64_t raw_lower_bound;
  memcpy(&raw_lower_bound, &tmp_lower_bound, sizeof(tmp_lower_bound));
  if (raw_lower_bound != 0) {
    total_size += 1 + 8;
  }

  // double upper_bound = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_upper_bound = this->_internal_upper_bound();
  uint64_t raw_upper_bound;
  memcpy(&raw_upper_bound, &tmp_upper_bound, sizeof(tmp_upper_bound));
  if (raw_upper_bound != 0) {
    total_size += 1 + 8;
  }

  // bool activate_on_zero = 6;
  if (this->_internal_activate_on_zero() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IndicatorConstraintProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    IndicatorConstraintProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IndicatorConstraintProto::GetClassData() const { return &_class_data_; }


void IndicatorConstraintProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<IndicatorConstraintProto*>(&to_msg);
  auto& from = static_cast<const IndicatorConstraintProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:operations_research.math_opt.IndicatorConstraintProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_expression()) {
    _this->_internal_mutable_expression()->::operations_research::math_opt::SparseDoubleVectorProto::MergeFrom(
        from._internal_expression());
  }
  if (from._internal_has_indicator_id()) {
    _this->_internal_set_indicator_id(from._internal_indicator_id());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lower_bound = from._internal_lower_bound();
  uint64_t raw_lower_bound;
  memcpy(&raw_lower_bound, &tmp_lower_bound, sizeof(tmp_lower_bound));
  if (raw_lower_bound != 0) {
    _this->_internal_set_lower_bound(from._internal_lower_bound());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_upper_bound = from._internal_upper_bound();
  uint64_t raw_upper_bound;
  memcpy(&raw_upper_bound, &tmp_upper_bound, sizeof(tmp_upper_bound));
  if (raw_upper_bound != 0) {
    _this->_internal_set_upper_bound(from._internal_upper_bound());
  }
  if (from._internal_activate_on_zero() != 0) {
    _this->_internal_set_activate_on_zero(from._internal_activate_on_zero());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IndicatorConstraintProto::CopyFrom(const IndicatorConstraintProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.math_opt.IndicatorConstraintProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndicatorConstraintProto::IsInitialized() const {
  return true;
}

void IndicatorConstraintProto::InternalSwap(IndicatorConstraintProto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IndicatorConstraintProto, _impl_.activate_on_zero_)
      + sizeof(IndicatorConstraintProto::_impl_.activate_on_zero_)
      - PROTOBUF_FIELD_OFFSET(IndicatorConstraintProto, _impl_.expression_)>(
          reinterpret_cast<char*>(&_impl_.expression_),
          reinterpret_cast<char*>(&other->_impl_.expression_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IndicatorConstraintProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fmodel_2eproto[5]);
}

// ===================================================================

ModelProto_AuxiliaryObjectivesEntry_DoNotUse::ModelProto_AuxiliaryObjectivesEntry_DoNotUse() {}
ModelProto_AuxiliaryObjectivesEntry_DoNotUse::ModelProto_AuxiliaryObjectivesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelProto_AuxiliaryObjectivesEntry_DoNotUse::MergeFrom(const ModelProto_AuxiliaryObjectivesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelProto_AuxiliaryObjectivesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fmodel_2eproto[6]);
}

// ===================================================================

ModelProto_QuadraticConstraintsEntry_DoNotUse::ModelProto_QuadraticConstraintsEntry_DoNotUse() {}
ModelProto_QuadraticConstraintsEntry_DoNotUse::ModelProto_QuadraticConstraintsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelProto_QuadraticConstraintsEntry_DoNotUse::MergeFrom(const ModelProto_QuadraticConstraintsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelProto_QuadraticConstraintsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fmodel_2eproto[7]);
}

// ===================================================================

ModelProto_Sos1ConstraintsEntry_DoNotUse::ModelProto_Sos1ConstraintsEntry_DoNotUse() {}
ModelProto_Sos1ConstraintsEntry_DoNotUse::ModelProto_Sos1ConstraintsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelProto_Sos1ConstraintsEntry_DoNotUse::MergeFrom(const ModelProto_Sos1ConstraintsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelProto_Sos1ConstraintsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fmodel_2eproto[8]);
}

// ===================================================================

ModelProto_Sos2ConstraintsEntry_DoNotUse::ModelProto_Sos2ConstraintsEntry_DoNotUse() {}
ModelProto_Sos2ConstraintsEntry_DoNotUse::ModelProto_Sos2ConstraintsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelProto_Sos2ConstraintsEntry_DoNotUse::MergeFrom(const ModelProto_Sos2ConstraintsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelProto_Sos2ConstraintsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fmodel_2eproto[9]);
}

// ===================================================================

ModelProto_IndicatorConstraintsEntry_DoNotUse::ModelProto_IndicatorConstraintsEntry_DoNotUse() {}
ModelProto_IndicatorConstraintsEntry_DoNotUse::ModelProto_IndicatorConstraintsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelProto_IndicatorConstraintsEntry_DoNotUse::MergeFrom(const ModelProto_IndicatorConstraintsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelProto_IndicatorConstraintsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fmodel_2eproto[10]);
}

// ===================================================================

class ModelProto::_Internal {
 public:
  static const ::operations_research::math_opt::VariablesProto& variables(const ModelProto* msg);
  static const ::operations_research::math_opt::ObjectiveProto& objective(const ModelProto* msg);
  static const ::operations_research::math_opt::LinearConstraintsProto& linear_constraints(const ModelProto* msg);
  static const ::operations_research::math_opt::SparseDoubleMatrixProto& linear_constraint_matrix(const ModelProto* msg);
};

const ::operations_research::math_opt::VariablesProto&
ModelProto::_Internal::variables(const ModelProto* msg) {
  return *msg->_impl_.variables_;
}
const ::operations_research::math_opt::ObjectiveProto&
ModelProto::_Internal::objective(const ModelProto* msg) {
  return *msg->_impl_.objective_;
}
const ::operations_research::math_opt::LinearConstraintsProto&
ModelProto::_Internal::linear_constraints(const ModelProto* msg) {
  return *msg->_impl_.linear_constraints_;
}
const ::operations_research::math_opt::SparseDoubleMatrixProto&
ModelProto::_Internal::linear_constraint_matrix(const ModelProto* msg) {
  return *msg->_impl_.linear_constraint_matrix_;
}
void ModelProto::clear_linear_constraint_matrix() {
  if (GetArenaForAllocation() == nullptr && _impl_.linear_constraint_matrix_ != nullptr) {
    delete _impl_.linear_constraint_matrix_;
  }
  _impl_.linear_constraint_matrix_ = nullptr;
}
ModelProto::ModelProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &ModelProto::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:operations_research.math_opt.ModelProto)
}
ModelProto::ModelProto(const ModelProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.quadratic_constraints_)*/{}
    , /*decltype(_impl_.sos1_constraints_)*/{}
    , /*decltype(_impl_.sos2_constraints_)*/{}
    , /*decltype(_impl_.indicator_constraints_)*/{}
    , /*decltype(_impl_.auxiliary_objectives_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.variables_){nullptr}
    , decltype(_impl_.objective_){nullptr}
    , decltype(_impl_.linear_constraints_){nullptr}
    , decltype(_impl_.linear_constraint_matrix_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.quadratic_constraints_.MergeFrom(from._impl_.quadratic_constraints_);
  _this->_impl_.sos1_constraints_.MergeFrom(from._impl_.sos1_constraints_);
  _this->_impl_.sos2_constraints_.MergeFrom(from._impl_.sos2_constraints_);
  _this->_impl_.indicator_constraints_.MergeFrom(from._impl_.indicator_constraints_);
  _this->_impl_.auxiliary_objectives_.MergeFrom(from._impl_.auxiliary_objectives_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_variables()) {
    _this->_impl_.variables_ = new ::operations_research::math_opt::VariablesProto(*from._impl_.variables_);
  }
  if (from._internal_has_objective()) {
    _this->_impl_.objective_ = new ::operations_research::math_opt::ObjectiveProto(*from._impl_.objective_);
  }
  if (from._internal_has_linear_constraints()) {
    _this->_impl_.linear_constraints_ = new ::operations_research::math_opt::LinearConstraintsProto(*from._impl_.linear_constraints_);
  }
  if (from._internal_has_linear_constraint_matrix()) {
    _this->_impl_.linear_constraint_matrix_ = new ::operations_research::math_opt::SparseDoubleMatrixProto(*from._impl_.linear_constraint_matrix_);
  }
  // @@protoc_insertion_point(copy_constructor:operations_research.math_opt.ModelProto)
}

inline void ModelProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.quadratic_constraints_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.sos1_constraints_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.sos2_constraints_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.indicator_constraints_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.auxiliary_objectives_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.variables_){nullptr}
    , decltype(_impl_.objective_){nullptr}
    , decltype(_impl_.linear_constraints_){nullptr}
    , decltype(_impl_.linear_constraint_matrix_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelProto::~ModelProto() {
  // @@protoc_insertion_point(destructor:operations_research.math_opt.ModelProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void ModelProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.quadratic_constraints_.Destruct();
  _impl_.quadratic_constraints_.~MapField();
  _impl_.sos1_constraints_.Destruct();
  _impl_.sos1_constraints_.~MapField();
  _impl_.sos2_constraints_.Destruct();
  _impl_.sos2_constraints_.~MapField();
  _impl_.indicator_constraints_.Destruct();
  _impl_.indicator_constraints_.~MapField();
  _impl_.auxiliary_objectives_.Destruct();
  _impl_.auxiliary_objectives_.~MapField();
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.variables_;
  if (this != internal_default_instance()) delete _impl_.objective_;
  if (this != internal_default_instance()) delete _impl_.linear_constraints_;
  if (this != internal_default_instance()) delete _impl_.linear_constraint_matrix_;
}

void ModelProto::ArenaDtor(void* object) {
  ModelProto* _this = reinterpret_cast< ModelProto* >(object);
  _this->_impl_.quadratic_constraints_.Destruct();
  _this->_impl_.sos1_constraints_.Destruct();
  _this->_impl_.sos2_constraints_.Destruct();
  _this->_impl_.indicator_constraints_.Destruct();
  _this->_impl_.auxiliary_objectives_.Destruct();
}
void ModelProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelProto::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.math_opt.ModelProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.quadratic_constraints_.Clear();
  _impl_.sos1_constraints_.Clear();
  _impl_.sos2_constraints_.Clear();
  _impl_.indicator_constraints_.Clear();
  _impl_.auxiliary_objectives_.Clear();
  _impl_.name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.variables_ != nullptr) {
    delete _impl_.variables_;
  }
  _impl_.variables_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.objective_ != nullptr) {
    delete _impl_.objective_;
  }
  _impl_.objective_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.linear_constraints_ != nullptr) {
    delete _impl_.linear_constraints_;
  }
  _impl_.linear_constraints_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.linear_constraint_matrix_ != nullptr) {
    delete _impl_.linear_constraint_matrix_;
  }
  _impl_.linear_constraint_matrix_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "operations_research.math_opt.ModelProto.name"));
        } else
          goto handle_unusual;
        continue;
      // .operations_research.math_opt.VariablesProto variables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_variables(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .operations_research.math_opt.ObjectiveProto objective = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_objective(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .operations_research.math_opt.LinearConstraintsProto linear_constraints = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_linear_constraints(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .operations_research.math_opt.SparseDoubleMatrixProto linear_constraint_matrix = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_linear_constraint_matrix(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<int64, .operations_research.math_opt.QuadraticConstraintProto> quadratic_constraints = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.quadratic_constraints_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int64, .operations_research.math_opt.SosConstraintProto> sos1_constraints = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.sos1_constraints_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int64, .operations_research.math_opt.SosConstraintProto> sos2_constraints = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.sos2_constraints_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int64, .operations_research.math_opt.IndicatorConstraintProto> indicator_constraints = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.indicator_constraints_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int64, .operations_research.math_opt.ObjectiveProto> auxiliary_objectives = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.auxiliary_objectives_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.math_opt.ModelProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "operations_research.math_opt.ModelProto.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .operations_research.math_opt.VariablesProto variables = 2;
  if (this->_internal_has_variables()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::variables(this),
        _Internal::variables(this).GetCachedSize(), target, stream);
  }

  // .operations_research.math_opt.ObjectiveProto objective = 3;
  if (this->_internal_has_objective()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::objective(this),
        _Internal::objective(this).GetCachedSize(), target, stream);
  }

  // .operations_research.math_opt.LinearConstraintsProto linear_constraints = 4;
  if (this->_internal_has_linear_constraints()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::linear_constraints(this),
        _Internal::linear_constraints(this).GetCachedSize(), target, stream);
  }

  // .operations_research.math_opt.SparseDoubleMatrixProto linear_constraint_matrix = 5;
  if (this->_internal_has_linear_constraint_matrix()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::linear_constraint_matrix(this),
        _Internal::linear_constraint_matrix(this).GetCachedSize(), target, stream);
  }

  // map<int64, .operations_research.math_opt.QuadraticConstraintProto> quadratic_constraints = 6;
  if (!this->_internal_quadratic_constraints().empty()) {
    using MapType = ::_pb::Map<int64_t, ::operations_research::math_opt::QuadraticConstraintProto>;
    using WireHelper = ModelProto_QuadraticConstraintsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_quadratic_constraints();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int64, .operations_research.math_opt.SosConstraintProto> sos1_constraints = 7;
  if (!this->_internal_sos1_constraints().empty()) {
    using MapType = ::_pb::Map<int64_t, ::operations_research::math_opt::SosConstraintProto>;
    using WireHelper = ModelProto_Sos1ConstraintsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_sos1_constraints();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(7, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(7, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int64, .operations_research.math_opt.SosConstraintProto> sos2_constraints = 8;
  if (!this->_internal_sos2_constraints().empty()) {
    using MapType = ::_pb::Map<int64_t, ::operations_research::math_opt::SosConstraintProto>;
    using WireHelper = ModelProto_Sos2ConstraintsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_sos2_constraints();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(8, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(8, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int64, .operations_research.math_opt.IndicatorConstraintProto> indicator_constraints = 9;
  if (!this->_internal_indicator_constraints().empty()) {
    using MapType = ::_pb::Map<int64_t, ::operations_research::math_opt::IndicatorConstraintProto>;
    using WireHelper = ModelProto_IndicatorConstraintsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_indicator_constraints();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(9, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(9, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int64, .operations_research.math_opt.ObjectiveProto> auxiliary_objectives = 10;
  if (!this->_internal_auxiliary_objectives().empty()) {
    using MapType = ::_pb::Map<int64_t, ::operations_research::math_opt::ObjectiveProto>;
    using WireHelper = ModelProto_AuxiliaryObjectivesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_auxiliary_objectives();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(10, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(10, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.math_opt.ModelProto)
  return target;
}

size_t ModelProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.math_opt.ModelProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int64, .operations_research.math_opt.QuadraticConstraintProto> quadratic_constraints = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_quadratic_constraints_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::operations_research::math_opt::QuadraticConstraintProto >::const_iterator
      it = this->_internal_quadratic_constraints().begin();
      it != this->_internal_quadratic_constraints().end(); ++it) {
    total_size += ModelProto_QuadraticConstraintsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int64, .operations_research.math_opt.SosConstraintProto> sos1_constraints = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_sos1_constraints_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::operations_research::math_opt::SosConstraintProto >::const_iterator
      it = this->_internal_sos1_constraints().begin();
      it != this->_internal_sos1_constraints().end(); ++it) {
    total_size += ModelProto_Sos1ConstraintsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int64, .operations_research.math_opt.SosConstraintProto> sos2_constraints = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_sos2_constraints_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::operations_research::math_opt::SosConstraintProto >::const_iterator
      it = this->_internal_sos2_constraints().begin();
      it != this->_internal_sos2_constraints().end(); ++it) {
    total_size += ModelProto_Sos2ConstraintsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int64, .operations_research.math_opt.IndicatorConstraintProto> indicator_constraints = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_indicator_constraints_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::operations_research::math_opt::IndicatorConstraintProto >::const_iterator
      it = this->_internal_indicator_constraints().begin();
      it != this->_internal_indicator_constraints().end(); ++it) {
    total_size += ModelProto_IndicatorConstraintsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int64, .operations_research.math_opt.ObjectiveProto> auxiliary_objectives = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_auxiliary_objectives_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::operations_research::math_opt::ObjectiveProto >::const_iterator
      it = this->_internal_auxiliary_objectives().begin();
      it != this->_internal_auxiliary_objectives().end(); ++it) {
    total_size += ModelProto_AuxiliaryObjectivesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .operations_research.math_opt.VariablesProto variables = 2;
  if (this->_internal_has_variables()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.variables_);
  }

  // .operations_research.math_opt.ObjectiveProto objective = 3;
  if (this->_internal_has_objective()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.objective_);
  }

  // .operations_research.math_opt.LinearConstraintsProto linear_constraints = 4;
  if (this->_internal_has_linear_constraints()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.linear_constraints_);
  }

  // .operations_research.math_opt.SparseDoubleMatrixProto linear_constraint_matrix = 5;
  if (this->_internal_has_linear_constraint_matrix()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.linear_constraint_matrix_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelProto::GetClassData() const { return &_class_data_; }


void ModelProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelProto*>(&to_msg);
  auto& from = static_cast<const ModelProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:operations_research.math_opt.ModelProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.quadratic_constraints_.MergeFrom(from._impl_.quadratic_constraints_);
  _this->_impl_.sos1_constraints_.MergeFrom(from._impl_.sos1_constraints_);
  _this->_impl_.sos2_constraints_.MergeFrom(from._impl_.sos2_constraints_);
  _this->_impl_.indicator_constraints_.MergeFrom(from._impl_.indicator_constraints_);
  _this->_impl_.auxiliary_objectives_.MergeFrom(from._impl_.auxiliary_objectives_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_variables()) {
    _this->_internal_mutable_variables()->::operations_research::math_opt::VariablesProto::MergeFrom(
        from._internal_variables());
  }
  if (from._internal_has_objective()) {
    _this->_internal_mutable_objective()->::operations_research::math_opt::ObjectiveProto::MergeFrom(
        from._internal_objective());
  }
  if (from._internal_has_linear_constraints()) {
    _this->_internal_mutable_linear_constraints()->::operations_research::math_opt::LinearConstraintsProto::MergeFrom(
        from._internal_linear_constraints());
  }
  if (from._internal_has_linear_constraint_matrix()) {
    _this->_internal_mutable_linear_constraint_matrix()->::operations_research::math_opt::SparseDoubleMatrixProto::MergeFrom(
        from._internal_linear_constraint_matrix());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelProto::CopyFrom(const ModelProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.math_opt.ModelProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelProto::IsInitialized() const {
  return true;
}

void ModelProto::InternalSwap(ModelProto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.quadratic_constraints_.InternalSwap(&other->_impl_.quadratic_constraints_);
  _impl_.sos1_constraints_.InternalSwap(&other->_impl_.sos1_constraints_);
  _impl_.sos2_constraints_.InternalSwap(&other->_impl_.sos2_constraints_);
  _impl_.indicator_constraints_.InternalSwap(&other->_impl_.indicator_constraints_);
  _impl_.auxiliary_objectives_.InternalSwap(&other->_impl_.auxiliary_objectives_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.linear_constraint_matrix_)
      + sizeof(ModelProto::_impl_.linear_constraint_matrix_)
      - PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.variables_)>(
          reinterpret_cast<char*>(&_impl_.variables_),
          reinterpret_cast<char*>(&other->_impl_.variables_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fmodel_2eproto[11]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace math_opt
}  // namespace operations_research
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::VariablesProto*
Arena::CreateMaybeMessage< ::operations_research::math_opt::VariablesProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::VariablesProto >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::ObjectiveProto*
Arena::CreateMaybeMessage< ::operations_research::math_opt::ObjectiveProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::ObjectiveProto >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::LinearConstraintsProto*
Arena::CreateMaybeMessage< ::operations_research::math_opt::LinearConstraintsProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::LinearConstraintsProto >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::QuadraticConstraintProto*
Arena::CreateMaybeMessage< ::operations_research::math_opt::QuadraticConstraintProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::QuadraticConstraintProto >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::SosConstraintProto*
Arena::CreateMaybeMessage< ::operations_research::math_opt::SosConstraintProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::SosConstraintProto >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::IndicatorConstraintProto*
Arena::CreateMaybeMessage< ::operations_research::math_opt::IndicatorConstraintProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::IndicatorConstraintProto >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::ModelProto_AuxiliaryObjectivesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::operations_research::math_opt::ModelProto_AuxiliaryObjectivesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::ModelProto_AuxiliaryObjectivesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::ModelProto_QuadraticConstraintsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::operations_research::math_opt::ModelProto_QuadraticConstraintsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::ModelProto_QuadraticConstraintsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::ModelProto_Sos1ConstraintsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::operations_research::math_opt::ModelProto_Sos1ConstraintsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::ModelProto_Sos1ConstraintsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::ModelProto_Sos2ConstraintsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::operations_research::math_opt::ModelProto_Sos2ConstraintsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::ModelProto_Sos2ConstraintsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::ModelProto_IndicatorConstraintsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::operations_research::math_opt::ModelProto_IndicatorConstraintsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::ModelProto_IndicatorConstraintsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::ModelProto*
Arena::CreateMaybeMessage< ::operations_research::math_opt::ModelProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::ModelProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
