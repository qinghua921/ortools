// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/math_opt/solution.proto

#include "ortools/math_opt/solution.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace operations_research {
namespace math_opt {
PROTOBUF_CONSTEXPR PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse::PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUseDefaultTypeInternal _PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR PrimalSolutionProto::PrimalSolutionProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.auxiliary_objective_values_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.variable_values_)*/nullptr
  , /*decltype(_impl_.objective_value_)*/0
  , /*decltype(_impl_.feasibility_status_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PrimalSolutionProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PrimalSolutionProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PrimalSolutionProtoDefaultTypeInternal() {}
  union {
    PrimalSolutionProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PrimalSolutionProtoDefaultTypeInternal _PrimalSolutionProto_default_instance_;
PROTOBUF_CONSTEXPR PrimalRayProto::PrimalRayProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.variable_values_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PrimalRayProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PrimalRayProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PrimalRayProtoDefaultTypeInternal() {}
  union {
    PrimalRayProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PrimalRayProtoDefaultTypeInternal _PrimalRayProto_default_instance_;
PROTOBUF_CONSTEXPR DualSolutionProto::DualSolutionProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.dual_values_)*/nullptr
  , /*decltype(_impl_.reduced_costs_)*/nullptr
  , /*decltype(_impl_.objective_value_)*/0
  , /*decltype(_impl_.feasibility_status_)*/0} {}
struct DualSolutionProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DualSolutionProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DualSolutionProtoDefaultTypeInternal() {}
  union {
    DualSolutionProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DualSolutionProtoDefaultTypeInternal _DualSolutionProto_default_instance_;
PROTOBUF_CONSTEXPR DualRayProto::DualRayProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dual_values_)*/nullptr
  , /*decltype(_impl_.reduced_costs_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DualRayProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DualRayProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DualRayProtoDefaultTypeInternal() {}
  union {
    DualRayProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DualRayProtoDefaultTypeInternal _DualRayProto_default_instance_;
PROTOBUF_CONSTEXPR SparseBasisStatusVector::SparseBasisStatusVector(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ids_)*/{}
  , /*decltype(_impl_._ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.values_)*/{}
  , /*decltype(_impl_._values_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SparseBasisStatusVectorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SparseBasisStatusVectorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SparseBasisStatusVectorDefaultTypeInternal() {}
  union {
    SparseBasisStatusVector _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SparseBasisStatusVectorDefaultTypeInternal _SparseBasisStatusVector_default_instance_;
PROTOBUF_CONSTEXPR BasisProto::BasisProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.constraint_status_)*/nullptr
  , /*decltype(_impl_.variable_status_)*/nullptr
  , /*decltype(_impl_.basic_dual_feasibility_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BasisProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BasisProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BasisProtoDefaultTypeInternal() {}
  union {
    BasisProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BasisProtoDefaultTypeInternal _BasisProto_default_instance_;
PROTOBUF_CONSTEXPR SolutionProto::SolutionProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.primal_solution_)*/nullptr
  , /*decltype(_impl_.dual_solution_)*/nullptr
  , /*decltype(_impl_.basis_)*/nullptr} {}
struct SolutionProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionProtoDefaultTypeInternal() {}
  union {
    SolutionProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionProtoDefaultTypeInternal _SolutionProto_default_instance_;
}  // namespace math_opt
}  // namespace operations_research
static ::_pb::Metadata file_level_metadata_ortools_2fmath_5fopt_2fsolution_2eproto[8];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ortools_2fmath_5fopt_2fsolution_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_ortools_2fmath_5fopt_2fsolution_2eproto = nullptr;

const uint32_t TableStruct_ortools_2fmath_5fopt_2fsolution_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::PrimalSolutionProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::PrimalSolutionProto, _impl_.variable_values_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::PrimalSolutionProto, _impl_.objective_value_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::PrimalSolutionProto, _impl_.auxiliary_objective_values_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::PrimalSolutionProto, _impl_.feasibility_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::PrimalRayProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::PrimalRayProto, _impl_.variable_values_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::DualSolutionProto, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::DualSolutionProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::DualSolutionProto, _impl_.dual_values_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::DualSolutionProto, _impl_.reduced_costs_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::DualSolutionProto, _impl_.objective_value_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::DualSolutionProto, _impl_.feasibility_status_),
  ~0u,
  ~0u,
  0,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::DualRayProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::DualRayProto, _impl_.dual_values_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::DualRayProto, _impl_.reduced_costs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::SparseBasisStatusVector, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::SparseBasisStatusVector, _impl_.ids_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::SparseBasisStatusVector, _impl_.values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::BasisProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::BasisProto, _impl_.constraint_status_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::BasisProto, _impl_.variable_status_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::BasisProto, _impl_.basic_dual_feasibility_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::SolutionProto, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::SolutionProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::SolutionProto, _impl_.primal_solution_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::SolutionProto, _impl_.dual_solution_),
  PROTOBUF_FIELD_OFFSET(::operations_research::math_opt::SolutionProto, _impl_.basis_),
  0,
  1,
  2,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::operations_research::math_opt::PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::operations_research::math_opt::PrimalSolutionProto)},
  { 20, -1, -1, sizeof(::operations_research::math_opt::PrimalRayProto)},
  { 27, 37, -1, sizeof(::operations_research::math_opt::DualSolutionProto)},
  { 41, -1, -1, sizeof(::operations_research::math_opt::DualRayProto)},
  { 49, -1, -1, sizeof(::operations_research::math_opt::SparseBasisStatusVector)},
  { 57, -1, -1, sizeof(::operations_research::math_opt::BasisProto)},
  { 66, 75, -1, sizeof(::operations_research::math_opt::SolutionProto)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::operations_research::math_opt::_PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse_default_instance_._instance,
  &::operations_research::math_opt::_PrimalSolutionProto_default_instance_._instance,
  &::operations_research::math_opt::_PrimalRayProto_default_instance_._instance,
  &::operations_research::math_opt::_DualSolutionProto_default_instance_._instance,
  &::operations_research::math_opt::_DualRayProto_default_instance_._instance,
  &::operations_research::math_opt::_SparseBasisStatusVector_default_instance_._instance,
  &::operations_research::math_opt::_BasisProto_default_instance_._instance,
  &::operations_research::math_opt::_SolutionProto_default_instance_._instance,
};

const char descriptor_table_protodef_ortools_2fmath_5fopt_2fsolution_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037ortools/math_opt/solution.proto\022\034opera"
  "tions_research.math_opt\032(ortools/math_op"
  "t/sparse_containers.proto\"\203\003\n\023PrimalSolu"
  "tionProto\022N\n\017variable_values\030\001 \001(\01325.ope"
  "rations_research.math_opt.SparseDoubleVe"
  "ctorProto\022\027\n\017objective_value\030\002 \001(\001\022s\n\032au"
  "xiliary_objective_values\030\004 \003(\0132O.operati"
  "ons_research.math_opt.PrimalSolutionProt"
  "o.AuxiliaryObjectiveValuesEntry\022M\n\022feasi"
  "bility_status\030\003 \001(\01621.operations_researc"
  "h.math_opt.SolutionStatusProto\032\?\n\035Auxili"
  "aryObjectiveValuesEntry\022\013\n\003key\030\001 \001(\003\022\r\n\005"
  "value\030\002 \001(\001:\0028\001\"`\n\016PrimalRayProto\022N\n\017var"
  "iable_values\030\001 \001(\01325.operations_research"
  ".math_opt.SparseDoubleVectorProto\"\256\002\n\021Du"
  "alSolutionProto\022J\n\013dual_values\030\001 \001(\01325.o"
  "perations_research.math_opt.SparseDouble"
  "VectorProto\022L\n\rreduced_costs\030\002 \001(\01325.ope"
  "rations_research.math_opt.SparseDoubleVe"
  "ctorProto\022\034\n\017objective_value\030\003 \001(\001H\000\210\001\001\022"
  "M\n\022feasibility_status\030\004 \001(\01621.operations"
  "_research.math_opt.SolutionStatusProtoB\022"
  "\n\020_objective_value\"\250\001\n\014DualRayProto\022J\n\013d"
  "ual_values\030\001 \001(\01325.operations_research.m"
  "ath_opt.SparseDoubleVectorProto\022L\n\rreduc"
  "ed_costs\030\002 \001(\01325.operations_research.mat"
  "h_opt.SparseDoubleVectorProto\"f\n\027SparseB"
  "asisStatusVector\022\013\n\003ids\030\001 \003(\003\022>\n\006values\030"
  "\002 \003(\0162..operations_research.math_opt.Bas"
  "isStatusProto\"\201\002\n\nBasisProto\022P\n\021constrai"
  "nt_status\030\001 \001(\01325.operations_research.ma"
  "th_opt.SparseBasisStatusVector\022N\n\017variab"
  "le_status\030\002 \001(\01325.operations_research.ma"
  "th_opt.SparseBasisStatusVector\022Q\n\026basic_"
  "dual_feasibility\030\003 \001(\01621.operations_rese"
  "arch.math_opt.SolutionStatusProto\"\233\002\n\rSo"
  "lutionProto\022O\n\017primal_solution\030\001 \001(\01321.o"
  "perations_research.math_opt.PrimalSoluti"
  "onProtoH\000\210\001\001\022K\n\rdual_solution\030\002 \001(\0132/.op"
  "erations_research.math_opt.DualSolutionP"
  "rotoH\001\210\001\001\022<\n\005basis\030\003 \001(\0132(.operations_re"
  "search.math_opt.BasisProtoH\002\210\001\001B\022\n\020_prim"
  "al_solutionB\020\n\016_dual_solutionB\010\n\006_basis*"
  "\226\001\n\023SolutionStatusProto\022\037\n\033SOLUTION_STAT"
  "US_UNSPECIFIED\020\000\022 \n\034SOLUTION_STATUS_UNDE"
  "TERMINED\020\001\022\034\n\030SOLUTION_STATUS_FEASIBLE\020\002"
  "\022\036\n\032SOLUTION_STATUS_INFEASIBLE\020\003*\277\001\n\020Bas"
  "isStatusProto\022\034\n\030BASIS_STATUS_UNSPECIFIE"
  "D\020\000\022\025\n\021BASIS_STATUS_FREE\020\001\022\037\n\033BASIS_STAT"
  "US_AT_LOWER_BOUND\020\002\022\037\n\033BASIS_STATUS_AT_U"
  "PPER_BOUND\020\003\022\034\n\030BASIS_STATUS_FIXED_VALUE"
  "\020\004\022\026\n\022BASIS_STATUS_BASIC\020\005B\036\n\032com.google"
  ".ortools.mathoptP\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_deps[1] = {
  &::descriptor_table_ortools_2fmath_5fopt_2fsparse_5fcontainers_2eproto,
};
static ::_pbi::once_flag descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto = {
    false, false, 2106, descriptor_table_protodef_ortools_2fmath_5fopt_2fsolution_2eproto,
    "ortools/math_opt/solution.proto",
    &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_once, descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_deps, 1, 8,
    schemas, file_default_instances, TableStruct_ortools_2fmath_5fopt_2fsolution_2eproto::offsets,
    file_level_metadata_ortools_2fmath_5fopt_2fsolution_2eproto, file_level_enum_descriptors_ortools_2fmath_5fopt_2fsolution_2eproto,
    file_level_service_descriptors_ortools_2fmath_5fopt_2fsolution_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_getter() {
  return &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ortools_2fmath_5fopt_2fsolution_2eproto(&descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto);
namespace operations_research {
namespace math_opt {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SolutionStatusProto_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto);
  return file_level_enum_descriptors_ortools_2fmath_5fopt_2fsolution_2eproto[0];
}
bool SolutionStatusProto_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BasisStatusProto_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto);
  return file_level_enum_descriptors_ortools_2fmath_5fopt_2fsolution_2eproto[1];
}
bool BasisStatusProto_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse::PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse() {}
PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse::PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse::MergeFrom(const PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fsolution_2eproto[0]);
}

// ===================================================================

class PrimalSolutionProto::_Internal {
 public:
  static const ::operations_research::math_opt::SparseDoubleVectorProto& variable_values(const PrimalSolutionProto* msg);
};

const ::operations_research::math_opt::SparseDoubleVectorProto&
PrimalSolutionProto::_Internal::variable_values(const PrimalSolutionProto* msg) {
  return *msg->_impl_.variable_values_;
}
void PrimalSolutionProto::clear_variable_values() {
  if (GetArenaForAllocation() == nullptr && _impl_.variable_values_ != nullptr) {
    delete _impl_.variable_values_;
  }
  _impl_.variable_values_ = nullptr;
}
PrimalSolutionProto::PrimalSolutionProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &PrimalSolutionProto::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:operations_research.math_opt.PrimalSolutionProto)
}
PrimalSolutionProto::PrimalSolutionProto(const PrimalSolutionProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PrimalSolutionProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.auxiliary_objective_values_)*/{}
    , decltype(_impl_.variable_values_){nullptr}
    , decltype(_impl_.objective_value_){}
    , decltype(_impl_.feasibility_status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.auxiliary_objective_values_.MergeFrom(from._impl_.auxiliary_objective_values_);
  if (from._internal_has_variable_values()) {
    _this->_impl_.variable_values_ = new ::operations_research::math_opt::SparseDoubleVectorProto(*from._impl_.variable_values_);
  }
  ::memcpy(&_impl_.objective_value_, &from._impl_.objective_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.feasibility_status_) -
    reinterpret_cast<char*>(&_impl_.objective_value_)) + sizeof(_impl_.feasibility_status_));
  // @@protoc_insertion_point(copy_constructor:operations_research.math_opt.PrimalSolutionProto)
}

inline void PrimalSolutionProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.auxiliary_objective_values_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.variable_values_){nullptr}
    , decltype(_impl_.objective_value_){0}
    , decltype(_impl_.feasibility_status_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PrimalSolutionProto::~PrimalSolutionProto() {
  // @@protoc_insertion_point(destructor:operations_research.math_opt.PrimalSolutionProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void PrimalSolutionProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.auxiliary_objective_values_.Destruct();
  _impl_.auxiliary_objective_values_.~MapField();
  if (this != internal_default_instance()) delete _impl_.variable_values_;
}

void PrimalSolutionProto::ArenaDtor(void* object) {
  PrimalSolutionProto* _this = reinterpret_cast< PrimalSolutionProto* >(object);
  _this->_impl_.auxiliary_objective_values_.Destruct();
}
void PrimalSolutionProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PrimalSolutionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.math_opt.PrimalSolutionProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.auxiliary_objective_values_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.variable_values_ != nullptr) {
    delete _impl_.variable_values_;
  }
  _impl_.variable_values_ = nullptr;
  ::memset(&_impl_.objective_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.feasibility_status_) -
      reinterpret_cast<char*>(&_impl_.objective_value_)) + sizeof(_impl_.feasibility_status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrimalSolutionProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .operations_research.math_opt.SparseDoubleVectorProto variable_values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_variable_values(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double objective_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _impl_.objective_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // .operations_research.math_opt.SolutionStatusProto feasibility_status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_feasibility_status(static_cast<::operations_research::math_opt::SolutionStatusProto>(val));
        } else
          goto handle_unusual;
        continue;
      // map<int64, double> auxiliary_objective_values = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.auxiliary_objective_values_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PrimalSolutionProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.math_opt.PrimalSolutionProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .operations_research.math_opt.SparseDoubleVectorProto variable_values = 1;
  if (this->_internal_has_variable_values()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::variable_values(this),
        _Internal::variable_values(this).GetCachedSize(), target, stream);
  }

  // double objective_value = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_objective_value = this->_internal_objective_value();
  uint64_t raw_objective_value;
  memcpy(&raw_objective_value, &tmp_objective_value, sizeof(tmp_objective_value));
  if (raw_objective_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_objective_value(), target);
  }

  // .operations_research.math_opt.SolutionStatusProto feasibility_status = 3;
  if (this->_internal_feasibility_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_feasibility_status(), target);
  }

  // map<int64, double> auxiliary_objective_values = 4;
  if (!this->_internal_auxiliary_objective_values().empty()) {
    using MapType = ::_pb::Map<int64_t, double>;
    using WireHelper = PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_auxiliary_objective_values();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.math_opt.PrimalSolutionProto)
  return target;
}

size_t PrimalSolutionProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.math_opt.PrimalSolutionProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int64, double> auxiliary_objective_values = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_auxiliary_objective_values_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int64_t, double >::const_iterator
      it = this->_internal_auxiliary_objective_values().begin();
      it != this->_internal_auxiliary_objective_values().end(); ++it) {
    total_size += PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .operations_research.math_opt.SparseDoubleVectorProto variable_values = 1;
  if (this->_internal_has_variable_values()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.variable_values_);
  }

  // double objective_value = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_objective_value = this->_internal_objective_value();
  uint64_t raw_objective_value;
  memcpy(&raw_objective_value, &tmp_objective_value, sizeof(tmp_objective_value));
  if (raw_objective_value != 0) {
    total_size += 1 + 8;
  }

  // .operations_research.math_opt.SolutionStatusProto feasibility_status = 3;
  if (this->_internal_feasibility_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_feasibility_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PrimalSolutionProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PrimalSolutionProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PrimalSolutionProto::GetClassData() const { return &_class_data_; }


void PrimalSolutionProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PrimalSolutionProto*>(&to_msg);
  auto& from = static_cast<const PrimalSolutionProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:operations_research.math_opt.PrimalSolutionProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.auxiliary_objective_values_.MergeFrom(from._impl_.auxiliary_objective_values_);
  if (from._internal_has_variable_values()) {
    _this->_internal_mutable_variable_values()->::operations_research::math_opt::SparseDoubleVectorProto::MergeFrom(
        from._internal_variable_values());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_objective_value = from._internal_objective_value();
  uint64_t raw_objective_value;
  memcpy(&raw_objective_value, &tmp_objective_value, sizeof(tmp_objective_value));
  if (raw_objective_value != 0) {
    _this->_internal_set_objective_value(from._internal_objective_value());
  }
  if (from._internal_feasibility_status() != 0) {
    _this->_internal_set_feasibility_status(from._internal_feasibility_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PrimalSolutionProto::CopyFrom(const PrimalSolutionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.math_opt.PrimalSolutionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrimalSolutionProto::IsInitialized() const {
  return true;
}

void PrimalSolutionProto::InternalSwap(PrimalSolutionProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.auxiliary_objective_values_.InternalSwap(&other->_impl_.auxiliary_objective_values_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PrimalSolutionProto, _impl_.feasibility_status_)
      + sizeof(PrimalSolutionProto::_impl_.feasibility_status_)
      - PROTOBUF_FIELD_OFFSET(PrimalSolutionProto, _impl_.variable_values_)>(
          reinterpret_cast<char*>(&_impl_.variable_values_),
          reinterpret_cast<char*>(&other->_impl_.variable_values_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PrimalSolutionProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fsolution_2eproto[1]);
}

// ===================================================================

class PrimalRayProto::_Internal {
 public:
  static const ::operations_research::math_opt::SparseDoubleVectorProto& variable_values(const PrimalRayProto* msg);
};

const ::operations_research::math_opt::SparseDoubleVectorProto&
PrimalRayProto::_Internal::variable_values(const PrimalRayProto* msg) {
  return *msg->_impl_.variable_values_;
}
void PrimalRayProto::clear_variable_values() {
  if (GetArenaForAllocation() == nullptr && _impl_.variable_values_ != nullptr) {
    delete _impl_.variable_values_;
  }
  _impl_.variable_values_ = nullptr;
}
PrimalRayProto::PrimalRayProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:operations_research.math_opt.PrimalRayProto)
}
PrimalRayProto::PrimalRayProto(const PrimalRayProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PrimalRayProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.variable_values_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_variable_values()) {
    _this->_impl_.variable_values_ = new ::operations_research::math_opt::SparseDoubleVectorProto(*from._impl_.variable_values_);
  }
  // @@protoc_insertion_point(copy_constructor:operations_research.math_opt.PrimalRayProto)
}

inline void PrimalRayProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.variable_values_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PrimalRayProto::~PrimalRayProto() {
  // @@protoc_insertion_point(destructor:operations_research.math_opt.PrimalRayProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PrimalRayProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.variable_values_;
}

void PrimalRayProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PrimalRayProto::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.math_opt.PrimalRayProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.variable_values_ != nullptr) {
    delete _impl_.variable_values_;
  }
  _impl_.variable_values_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrimalRayProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .operations_research.math_opt.SparseDoubleVectorProto variable_values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_variable_values(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PrimalRayProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.math_opt.PrimalRayProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .operations_research.math_opt.SparseDoubleVectorProto variable_values = 1;
  if (this->_internal_has_variable_values()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::variable_values(this),
        _Internal::variable_values(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.math_opt.PrimalRayProto)
  return target;
}

size_t PrimalRayProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.math_opt.PrimalRayProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .operations_research.math_opt.SparseDoubleVectorProto variable_values = 1;
  if (this->_internal_has_variable_values()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.variable_values_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PrimalRayProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PrimalRayProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PrimalRayProto::GetClassData() const { return &_class_data_; }


void PrimalRayProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PrimalRayProto*>(&to_msg);
  auto& from = static_cast<const PrimalRayProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:operations_research.math_opt.PrimalRayProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_variable_values()) {
    _this->_internal_mutable_variable_values()->::operations_research::math_opt::SparseDoubleVectorProto::MergeFrom(
        from._internal_variable_values());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PrimalRayProto::CopyFrom(const PrimalRayProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.math_opt.PrimalRayProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrimalRayProto::IsInitialized() const {
  return true;
}

void PrimalRayProto::InternalSwap(PrimalRayProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.variable_values_, other->_impl_.variable_values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrimalRayProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fsolution_2eproto[2]);
}

// ===================================================================

class DualSolutionProto::_Internal {
 public:
  using HasBits = decltype(std::declval<DualSolutionProto>()._impl_._has_bits_);
  static const ::operations_research::math_opt::SparseDoubleVectorProto& dual_values(const DualSolutionProto* msg);
  static const ::operations_research::math_opt::SparseDoubleVectorProto& reduced_costs(const DualSolutionProto* msg);
  static void set_has_objective_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::operations_research::math_opt::SparseDoubleVectorProto&
DualSolutionProto::_Internal::dual_values(const DualSolutionProto* msg) {
  return *msg->_impl_.dual_values_;
}
const ::operations_research::math_opt::SparseDoubleVectorProto&
DualSolutionProto::_Internal::reduced_costs(const DualSolutionProto* msg) {
  return *msg->_impl_.reduced_costs_;
}
void DualSolutionProto::clear_dual_values() {
  if (GetArenaForAllocation() == nullptr && _impl_.dual_values_ != nullptr) {
    delete _impl_.dual_values_;
  }
  _impl_.dual_values_ = nullptr;
}
void DualSolutionProto::clear_reduced_costs() {
  if (GetArenaForAllocation() == nullptr && _impl_.reduced_costs_ != nullptr) {
    delete _impl_.reduced_costs_;
  }
  _impl_.reduced_costs_ = nullptr;
}
DualSolutionProto::DualSolutionProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:operations_research.math_opt.DualSolutionProto)
}
DualSolutionProto::DualSolutionProto(const DualSolutionProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DualSolutionProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dual_values_){nullptr}
    , decltype(_impl_.reduced_costs_){nullptr}
    , decltype(_impl_.objective_value_){}
    , decltype(_impl_.feasibility_status_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_dual_values()) {
    _this->_impl_.dual_values_ = new ::operations_research::math_opt::SparseDoubleVectorProto(*from._impl_.dual_values_);
  }
  if (from._internal_has_reduced_costs()) {
    _this->_impl_.reduced_costs_ = new ::operations_research::math_opt::SparseDoubleVectorProto(*from._impl_.reduced_costs_);
  }
  ::memcpy(&_impl_.objective_value_, &from._impl_.objective_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.feasibility_status_) -
    reinterpret_cast<char*>(&_impl_.objective_value_)) + sizeof(_impl_.feasibility_status_));
  // @@protoc_insertion_point(copy_constructor:operations_research.math_opt.DualSolutionProto)
}

inline void DualSolutionProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dual_values_){nullptr}
    , decltype(_impl_.reduced_costs_){nullptr}
    , decltype(_impl_.objective_value_){0}
    , decltype(_impl_.feasibility_status_){0}
  };
}

DualSolutionProto::~DualSolutionProto() {
  // @@protoc_insertion_point(destructor:operations_research.math_opt.DualSolutionProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DualSolutionProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.dual_values_;
  if (this != internal_default_instance()) delete _impl_.reduced_costs_;
}

void DualSolutionProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DualSolutionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.math_opt.DualSolutionProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.dual_values_ != nullptr) {
    delete _impl_.dual_values_;
  }
  _impl_.dual_values_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.reduced_costs_ != nullptr) {
    delete _impl_.reduced_costs_;
  }
  _impl_.reduced_costs_ = nullptr;
  _impl_.objective_value_ = 0;
  _impl_.feasibility_status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DualSolutionProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .operations_research.math_opt.SparseDoubleVectorProto dual_values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dual_values(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .operations_research.math_opt.SparseDoubleVectorProto reduced_costs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_reduced_costs(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional double objective_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _Internal::set_has_objective_value(&has_bits);
          _impl_.objective_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // .operations_research.math_opt.SolutionStatusProto feasibility_status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_feasibility_status(static_cast<::operations_research::math_opt::SolutionStatusProto>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DualSolutionProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.math_opt.DualSolutionProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .operations_research.math_opt.SparseDoubleVectorProto dual_values = 1;
  if (this->_internal_has_dual_values()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::dual_values(this),
        _Internal::dual_values(this).GetCachedSize(), target, stream);
  }

  // .operations_research.math_opt.SparseDoubleVectorProto reduced_costs = 2;
  if (this->_internal_has_reduced_costs()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::reduced_costs(this),
        _Internal::reduced_costs(this).GetCachedSize(), target, stream);
  }

  // optional double objective_value = 3;
  if (_internal_has_objective_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_objective_value(), target);
  }

  // .operations_research.math_opt.SolutionStatusProto feasibility_status = 4;
  if (this->_internal_feasibility_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_feasibility_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.math_opt.DualSolutionProto)
  return target;
}

size_t DualSolutionProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.math_opt.DualSolutionProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .operations_research.math_opt.SparseDoubleVectorProto dual_values = 1;
  if (this->_internal_has_dual_values()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.dual_values_);
  }

  // .operations_research.math_opt.SparseDoubleVectorProto reduced_costs = 2;
  if (this->_internal_has_reduced_costs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.reduced_costs_);
  }

  // optional double objective_value = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  // .operations_research.math_opt.SolutionStatusProto feasibility_status = 4;
  if (this->_internal_feasibility_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_feasibility_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DualSolutionProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DualSolutionProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DualSolutionProto::GetClassData() const { return &_class_data_; }


void DualSolutionProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DualSolutionProto*>(&to_msg);
  auto& from = static_cast<const DualSolutionProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:operations_research.math_opt.DualSolutionProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_dual_values()) {
    _this->_internal_mutable_dual_values()->::operations_research::math_opt::SparseDoubleVectorProto::MergeFrom(
        from._internal_dual_values());
  }
  if (from._internal_has_reduced_costs()) {
    _this->_internal_mutable_reduced_costs()->::operations_research::math_opt::SparseDoubleVectorProto::MergeFrom(
        from._internal_reduced_costs());
  }
  if (from._internal_has_objective_value()) {
    _this->_internal_set_objective_value(from._internal_objective_value());
  }
  if (from._internal_feasibility_status() != 0) {
    _this->_internal_set_feasibility_status(from._internal_feasibility_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DualSolutionProto::CopyFrom(const DualSolutionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.math_opt.DualSolutionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DualSolutionProto::IsInitialized() const {
  return true;
}

void DualSolutionProto::InternalSwap(DualSolutionProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DualSolutionProto, _impl_.feasibility_status_)
      + sizeof(DualSolutionProto::_impl_.feasibility_status_)
      - PROTOBUF_FIELD_OFFSET(DualSolutionProto, _impl_.dual_values_)>(
          reinterpret_cast<char*>(&_impl_.dual_values_),
          reinterpret_cast<char*>(&other->_impl_.dual_values_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DualSolutionProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fsolution_2eproto[3]);
}

// ===================================================================

class DualRayProto::_Internal {
 public:
  static const ::operations_research::math_opt::SparseDoubleVectorProto& dual_values(const DualRayProto* msg);
  static const ::operations_research::math_opt::SparseDoubleVectorProto& reduced_costs(const DualRayProto* msg);
};

const ::operations_research::math_opt::SparseDoubleVectorProto&
DualRayProto::_Internal::dual_values(const DualRayProto* msg) {
  return *msg->_impl_.dual_values_;
}
const ::operations_research::math_opt::SparseDoubleVectorProto&
DualRayProto::_Internal::reduced_costs(const DualRayProto* msg) {
  return *msg->_impl_.reduced_costs_;
}
void DualRayProto::clear_dual_values() {
  if (GetArenaForAllocation() == nullptr && _impl_.dual_values_ != nullptr) {
    delete _impl_.dual_values_;
  }
  _impl_.dual_values_ = nullptr;
}
void DualRayProto::clear_reduced_costs() {
  if (GetArenaForAllocation() == nullptr && _impl_.reduced_costs_ != nullptr) {
    delete _impl_.reduced_costs_;
  }
  _impl_.reduced_costs_ = nullptr;
}
DualRayProto::DualRayProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:operations_research.math_opt.DualRayProto)
}
DualRayProto::DualRayProto(const DualRayProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DualRayProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dual_values_){nullptr}
    , decltype(_impl_.reduced_costs_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_dual_values()) {
    _this->_impl_.dual_values_ = new ::operations_research::math_opt::SparseDoubleVectorProto(*from._impl_.dual_values_);
  }
  if (from._internal_has_reduced_costs()) {
    _this->_impl_.reduced_costs_ = new ::operations_research::math_opt::SparseDoubleVectorProto(*from._impl_.reduced_costs_);
  }
  // @@protoc_insertion_point(copy_constructor:operations_research.math_opt.DualRayProto)
}

inline void DualRayProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dual_values_){nullptr}
    , decltype(_impl_.reduced_costs_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DualRayProto::~DualRayProto() {
  // @@protoc_insertion_point(destructor:operations_research.math_opt.DualRayProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DualRayProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.dual_values_;
  if (this != internal_default_instance()) delete _impl_.reduced_costs_;
}

void DualRayProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DualRayProto::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.math_opt.DualRayProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.dual_values_ != nullptr) {
    delete _impl_.dual_values_;
  }
  _impl_.dual_values_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.reduced_costs_ != nullptr) {
    delete _impl_.reduced_costs_;
  }
  _impl_.reduced_costs_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DualRayProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .operations_research.math_opt.SparseDoubleVectorProto dual_values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dual_values(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .operations_research.math_opt.SparseDoubleVectorProto reduced_costs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_reduced_costs(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DualRayProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.math_opt.DualRayProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .operations_research.math_opt.SparseDoubleVectorProto dual_values = 1;
  if (this->_internal_has_dual_values()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::dual_values(this),
        _Internal::dual_values(this).GetCachedSize(), target, stream);
  }

  // .operations_research.math_opt.SparseDoubleVectorProto reduced_costs = 2;
  if (this->_internal_has_reduced_costs()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::reduced_costs(this),
        _Internal::reduced_costs(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.math_opt.DualRayProto)
  return target;
}

size_t DualRayProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.math_opt.DualRayProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .operations_research.math_opt.SparseDoubleVectorProto dual_values = 1;
  if (this->_internal_has_dual_values()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.dual_values_);
  }

  // .operations_research.math_opt.SparseDoubleVectorProto reduced_costs = 2;
  if (this->_internal_has_reduced_costs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.reduced_costs_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DualRayProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DualRayProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DualRayProto::GetClassData() const { return &_class_data_; }


void DualRayProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DualRayProto*>(&to_msg);
  auto& from = static_cast<const DualRayProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:operations_research.math_opt.DualRayProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_dual_values()) {
    _this->_internal_mutable_dual_values()->::operations_research::math_opt::SparseDoubleVectorProto::MergeFrom(
        from._internal_dual_values());
  }
  if (from._internal_has_reduced_costs()) {
    _this->_internal_mutable_reduced_costs()->::operations_research::math_opt::SparseDoubleVectorProto::MergeFrom(
        from._internal_reduced_costs());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DualRayProto::CopyFrom(const DualRayProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.math_opt.DualRayProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DualRayProto::IsInitialized() const {
  return true;
}

void DualRayProto::InternalSwap(DualRayProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DualRayProto, _impl_.reduced_costs_)
      + sizeof(DualRayProto::_impl_.reduced_costs_)
      - PROTOBUF_FIELD_OFFSET(DualRayProto, _impl_.dual_values_)>(
          reinterpret_cast<char*>(&_impl_.dual_values_),
          reinterpret_cast<char*>(&other->_impl_.dual_values_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DualRayProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fsolution_2eproto[4]);
}

// ===================================================================

class SparseBasisStatusVector::_Internal {
 public:
};

SparseBasisStatusVector::SparseBasisStatusVector(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:operations_research.math_opt.SparseBasisStatusVector)
}
SparseBasisStatusVector::SparseBasisStatusVector(const SparseBasisStatusVector& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SparseBasisStatusVector* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ids_){from._impl_.ids_}
    , /*decltype(_impl_._ids_cached_byte_size_)*/{0}
    , decltype(_impl_.values_){from._impl_.values_}
    , /*decltype(_impl_._values_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:operations_research.math_opt.SparseBasisStatusVector)
}

inline void SparseBasisStatusVector::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ids_){arena}
    , /*decltype(_impl_._ids_cached_byte_size_)*/{0}
    , decltype(_impl_.values_){arena}
    , /*decltype(_impl_._values_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SparseBasisStatusVector::~SparseBasisStatusVector() {
  // @@protoc_insertion_point(destructor:operations_research.math_opt.SparseBasisStatusVector)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SparseBasisStatusVector::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ids_.~RepeatedField();
  _impl_.values_.~RepeatedField();
}

void SparseBasisStatusVector::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SparseBasisStatusVector::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.math_opt.SparseBasisStatusVector)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ids_.Clear();
  _impl_.values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SparseBasisStatusVector::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .operations_research.math_opt.BasisStatusProto values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_values(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_values(static_cast<::operations_research::math_opt::BasisStatusProto>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SparseBasisStatusVector::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.math_opt.SparseBasisStatusVector)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 ids = 1;
  {
    int byte_size = _impl_._ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          1, _internal_ids(), byte_size, target);
    }
  }

  // repeated .operations_research.math_opt.BasisStatusProto values = 2;
  {
    int byte_size = _impl_._values_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, _impl_.values_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.math_opt.SparseBasisStatusVector)
  return target;
}

size_t SparseBasisStatusVector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.math_opt.SparseBasisStatusVector)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .operations_research.math_opt.BasisStatusProto values = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_values_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_values(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._values_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SparseBasisStatusVector::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SparseBasisStatusVector::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SparseBasisStatusVector::GetClassData() const { return &_class_data_; }


void SparseBasisStatusVector::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SparseBasisStatusVector*>(&to_msg);
  auto& from = static_cast<const SparseBasisStatusVector&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:operations_research.math_opt.SparseBasisStatusVector)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.ids_.MergeFrom(from._impl_.ids_);
  _this->_impl_.values_.MergeFrom(from._impl_.values_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SparseBasisStatusVector::CopyFrom(const SparseBasisStatusVector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.math_opt.SparseBasisStatusVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SparseBasisStatusVector::IsInitialized() const {
  return true;
}

void SparseBasisStatusVector::InternalSwap(SparseBasisStatusVector* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ids_.InternalSwap(&other->_impl_.ids_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SparseBasisStatusVector::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fsolution_2eproto[5]);
}

// ===================================================================

class BasisProto::_Internal {
 public:
  static const ::operations_research::math_opt::SparseBasisStatusVector& constraint_status(const BasisProto* msg);
  static const ::operations_research::math_opt::SparseBasisStatusVector& variable_status(const BasisProto* msg);
};

const ::operations_research::math_opt::SparseBasisStatusVector&
BasisProto::_Internal::constraint_status(const BasisProto* msg) {
  return *msg->_impl_.constraint_status_;
}
const ::operations_research::math_opt::SparseBasisStatusVector&
BasisProto::_Internal::variable_status(const BasisProto* msg) {
  return *msg->_impl_.variable_status_;
}
BasisProto::BasisProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:operations_research.math_opt.BasisProto)
}
BasisProto::BasisProto(const BasisProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BasisProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.constraint_status_){nullptr}
    , decltype(_impl_.variable_status_){nullptr}
    , decltype(_impl_.basic_dual_feasibility_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_constraint_status()) {
    _this->_impl_.constraint_status_ = new ::operations_research::math_opt::SparseBasisStatusVector(*from._impl_.constraint_status_);
  }
  if (from._internal_has_variable_status()) {
    _this->_impl_.variable_status_ = new ::operations_research::math_opt::SparseBasisStatusVector(*from._impl_.variable_status_);
  }
  _this->_impl_.basic_dual_feasibility_ = from._impl_.basic_dual_feasibility_;
  // @@protoc_insertion_point(copy_constructor:operations_research.math_opt.BasisProto)
}

inline void BasisProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.constraint_status_){nullptr}
    , decltype(_impl_.variable_status_){nullptr}
    , decltype(_impl_.basic_dual_feasibility_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BasisProto::~BasisProto() {
  // @@protoc_insertion_point(destructor:operations_research.math_opt.BasisProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BasisProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.constraint_status_;
  if (this != internal_default_instance()) delete _impl_.variable_status_;
}

void BasisProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BasisProto::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.math_opt.BasisProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.constraint_status_ != nullptr) {
    delete _impl_.constraint_status_;
  }
  _impl_.constraint_status_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.variable_status_ != nullptr) {
    delete _impl_.variable_status_;
  }
  _impl_.variable_status_ = nullptr;
  _impl_.basic_dual_feasibility_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BasisProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .operations_research.math_opt.SparseBasisStatusVector constraint_status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_constraint_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .operations_research.math_opt.SparseBasisStatusVector variable_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_variable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .operations_research.math_opt.SolutionStatusProto basic_dual_feasibility = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_basic_dual_feasibility(static_cast<::operations_research::math_opt::SolutionStatusProto>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BasisProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.math_opt.BasisProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .operations_research.math_opt.SparseBasisStatusVector constraint_status = 1;
  if (this->_internal_has_constraint_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::constraint_status(this),
        _Internal::constraint_status(this).GetCachedSize(), target, stream);
  }

  // .operations_research.math_opt.SparseBasisStatusVector variable_status = 2;
  if (this->_internal_has_variable_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::variable_status(this),
        _Internal::variable_status(this).GetCachedSize(), target, stream);
  }

  // .operations_research.math_opt.SolutionStatusProto basic_dual_feasibility = 3;
  if (this->_internal_basic_dual_feasibility() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_basic_dual_feasibility(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.math_opt.BasisProto)
  return target;
}

size_t BasisProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.math_opt.BasisProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .operations_research.math_opt.SparseBasisStatusVector constraint_status = 1;
  if (this->_internal_has_constraint_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.constraint_status_);
  }

  // .operations_research.math_opt.SparseBasisStatusVector variable_status = 2;
  if (this->_internal_has_variable_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.variable_status_);
  }

  // .operations_research.math_opt.SolutionStatusProto basic_dual_feasibility = 3;
  if (this->_internal_basic_dual_feasibility() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_basic_dual_feasibility());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BasisProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BasisProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BasisProto::GetClassData() const { return &_class_data_; }


void BasisProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BasisProto*>(&to_msg);
  auto& from = static_cast<const BasisProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:operations_research.math_opt.BasisProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_constraint_status()) {
    _this->_internal_mutable_constraint_status()->::operations_research::math_opt::SparseBasisStatusVector::MergeFrom(
        from._internal_constraint_status());
  }
  if (from._internal_has_variable_status()) {
    _this->_internal_mutable_variable_status()->::operations_research::math_opt::SparseBasisStatusVector::MergeFrom(
        from._internal_variable_status());
  }
  if (from._internal_basic_dual_feasibility() != 0) {
    _this->_internal_set_basic_dual_feasibility(from._internal_basic_dual_feasibility());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BasisProto::CopyFrom(const BasisProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.math_opt.BasisProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasisProto::IsInitialized() const {
  return true;
}

void BasisProto::InternalSwap(BasisProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BasisProto, _impl_.basic_dual_feasibility_)
      + sizeof(BasisProto::_impl_.basic_dual_feasibility_)
      - PROTOBUF_FIELD_OFFSET(BasisProto, _impl_.constraint_status_)>(
          reinterpret_cast<char*>(&_impl_.constraint_status_),
          reinterpret_cast<char*>(&other->_impl_.constraint_status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BasisProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fsolution_2eproto[6]);
}

// ===================================================================

class SolutionProto::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionProto>()._impl_._has_bits_);
  static const ::operations_research::math_opt::PrimalSolutionProto& primal_solution(const SolutionProto* msg);
  static void set_has_primal_solution(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::operations_research::math_opt::DualSolutionProto& dual_solution(const SolutionProto* msg);
  static void set_has_dual_solution(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::operations_research::math_opt::BasisProto& basis(const SolutionProto* msg);
  static void set_has_basis(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::operations_research::math_opt::PrimalSolutionProto&
SolutionProto::_Internal::primal_solution(const SolutionProto* msg) {
  return *msg->_impl_.primal_solution_;
}
const ::operations_research::math_opt::DualSolutionProto&
SolutionProto::_Internal::dual_solution(const SolutionProto* msg) {
  return *msg->_impl_.dual_solution_;
}
const ::operations_research::math_opt::BasisProto&
SolutionProto::_Internal::basis(const SolutionProto* msg) {
  return *msg->_impl_.basis_;
}
SolutionProto::SolutionProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:operations_research.math_opt.SolutionProto)
}
SolutionProto::SolutionProto(const SolutionProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SolutionProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.primal_solution_){nullptr}
    , decltype(_impl_.dual_solution_){nullptr}
    , decltype(_impl_.basis_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_primal_solution()) {
    _this->_impl_.primal_solution_ = new ::operations_research::math_opt::PrimalSolutionProto(*from._impl_.primal_solution_);
  }
  if (from._internal_has_dual_solution()) {
    _this->_impl_.dual_solution_ = new ::operations_research::math_opt::DualSolutionProto(*from._impl_.dual_solution_);
  }
  if (from._internal_has_basis()) {
    _this->_impl_.basis_ = new ::operations_research::math_opt::BasisProto(*from._impl_.basis_);
  }
  // @@protoc_insertion_point(copy_constructor:operations_research.math_opt.SolutionProto)
}

inline void SolutionProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.primal_solution_){nullptr}
    , decltype(_impl_.dual_solution_){nullptr}
    , decltype(_impl_.basis_){nullptr}
  };
}

SolutionProto::~SolutionProto() {
  // @@protoc_insertion_point(destructor:operations_research.math_opt.SolutionProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SolutionProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.primal_solution_;
  if (this != internal_default_instance()) delete _impl_.dual_solution_;
  if (this != internal_default_instance()) delete _impl_.basis_;
}

void SolutionProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SolutionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.math_opt.SolutionProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.primal_solution_ != nullptr);
      _impl_.primal_solution_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.dual_solution_ != nullptr);
      _impl_.dual_solution_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.basis_ != nullptr);
      _impl_.basis_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SolutionProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .operations_research.math_opt.PrimalSolutionProto primal_solution = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_primal_solution(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .operations_research.math_opt.DualSolutionProto dual_solution = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_dual_solution(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .operations_research.math_opt.BasisProto basis = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_basis(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SolutionProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.math_opt.SolutionProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .operations_research.math_opt.PrimalSolutionProto primal_solution = 1;
  if (_internal_has_primal_solution()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::primal_solution(this),
        _Internal::primal_solution(this).GetCachedSize(), target, stream);
  }

  // optional .operations_research.math_opt.DualSolutionProto dual_solution = 2;
  if (_internal_has_dual_solution()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::dual_solution(this),
        _Internal::dual_solution(this).GetCachedSize(), target, stream);
  }

  // optional .operations_research.math_opt.BasisProto basis = 3;
  if (_internal_has_basis()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::basis(this),
        _Internal::basis(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.math_opt.SolutionProto)
  return target;
}

size_t SolutionProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.math_opt.SolutionProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .operations_research.math_opt.PrimalSolutionProto primal_solution = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.primal_solution_);
    }

    // optional .operations_research.math_opt.DualSolutionProto dual_solution = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.dual_solution_);
    }

    // optional .operations_research.math_opt.BasisProto basis = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.basis_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SolutionProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SolutionProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SolutionProto::GetClassData() const { return &_class_data_; }


void SolutionProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SolutionProto*>(&to_msg);
  auto& from = static_cast<const SolutionProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:operations_research.math_opt.SolutionProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_primal_solution()->::operations_research::math_opt::PrimalSolutionProto::MergeFrom(
          from._internal_primal_solution());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_dual_solution()->::operations_research::math_opt::DualSolutionProto::MergeFrom(
          from._internal_dual_solution());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_basis()->::operations_research::math_opt::BasisProto::MergeFrom(
          from._internal_basis());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionProto::CopyFrom(const SolutionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.math_opt.SolutionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionProto::IsInitialized() const {
  return true;
}

void SolutionProto::InternalSwap(SolutionProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SolutionProto, _impl_.basis_)
      + sizeof(SolutionProto::_impl_.basis_)
      - PROTOBUF_FIELD_OFFSET(SolutionProto, _impl_.primal_solution_)>(
          reinterpret_cast<char*>(&_impl_.primal_solution_),
          reinterpret_cast<char*>(&other->_impl_.primal_solution_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SolutionProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_getter, &descriptor_table_ortools_2fmath_5fopt_2fsolution_2eproto_once,
      file_level_metadata_ortools_2fmath_5fopt_2fsolution_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace math_opt
}  // namespace operations_research
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::operations_research::math_opt::PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::PrimalSolutionProto_AuxiliaryObjectiveValuesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::PrimalSolutionProto*
Arena::CreateMaybeMessage< ::operations_research::math_opt::PrimalSolutionProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::PrimalSolutionProto >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::PrimalRayProto*
Arena::CreateMaybeMessage< ::operations_research::math_opt::PrimalRayProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::PrimalRayProto >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::DualSolutionProto*
Arena::CreateMaybeMessage< ::operations_research::math_opt::DualSolutionProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::DualSolutionProto >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::DualRayProto*
Arena::CreateMaybeMessage< ::operations_research::math_opt::DualRayProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::DualRayProto >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::SparseBasisStatusVector*
Arena::CreateMaybeMessage< ::operations_research::math_opt::SparseBasisStatusVector >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::SparseBasisStatusVector >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::BasisProto*
Arena::CreateMaybeMessage< ::operations_research::math_opt::BasisProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::BasisProto >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::math_opt::SolutionProto*
Arena::CreateMaybeMessage< ::operations_research::math_opt::SolutionProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::math_opt::SolutionProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
