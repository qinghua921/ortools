// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/math_opt/solvers/osqp.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2fsolvers_2fosqp_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2fsolvers_2fosqp_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ortools_2fmath_5fopt_2fsolvers_2fosqp_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ortools_2fmath_5fopt_2fsolvers_2fosqp_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ortools_2fmath_5fopt_2fsolvers_2fosqp_2eproto;
namespace operations_research {
namespace math_opt {
class OsqpOutput;
struct OsqpOutputDefaultTypeInternal;
extern OsqpOutputDefaultTypeInternal _OsqpOutput_default_instance_;
class OsqpSettingsProto;
struct OsqpSettingsProtoDefaultTypeInternal;
extern OsqpSettingsProtoDefaultTypeInternal _OsqpSettingsProto_default_instance_;
}  // namespace math_opt
}  // namespace operations_research
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace operations_research {
namespace math_opt {

// ===================================================================


// -------------------------------------------------------------------

class OsqpSettingsProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:operations_research.math_opt.OsqpSettingsProto) */ {
 public:
  inline OsqpSettingsProto() : OsqpSettingsProto(nullptr) {}
  ~OsqpSettingsProto() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OsqpSettingsProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline OsqpSettingsProto(const OsqpSettingsProto& from) : OsqpSettingsProto(nullptr, from) {}
  inline OsqpSettingsProto(OsqpSettingsProto&& from) noexcept
      : OsqpSettingsProto(nullptr, std::move(from)) {}
  inline OsqpSettingsProto& operator=(const OsqpSettingsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline OsqpSettingsProto& operator=(OsqpSettingsProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OsqpSettingsProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const OsqpSettingsProto* internal_default_instance() {
    return reinterpret_cast<const OsqpSettingsProto*>(
        &_OsqpSettingsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(OsqpSettingsProto& a, OsqpSettingsProto& b) { a.Swap(&b); }
  inline void Swap(OsqpSettingsProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OsqpSettingsProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OsqpSettingsProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OsqpSettingsProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OsqpSettingsProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OsqpSettingsProto& from) { OsqpSettingsProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OsqpSettingsProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "operations_research.math_opt.OsqpSettingsProto"; }

 protected:
  explicit OsqpSettingsProto(::google::protobuf::Arena* arena);
  OsqpSettingsProto(::google::protobuf::Arena* arena, const OsqpSettingsProto& from);
  OsqpSettingsProto(::google::protobuf::Arena* arena, OsqpSettingsProto&& from) noexcept
      : OsqpSettingsProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRhoFieldNumber = 1,
    kSigmaFieldNumber = 2,
    kScalingFieldNumber = 3,
    kAdaptiveRhoIntervalFieldNumber = 5,
    kAdaptiveRhoToleranceFieldNumber = 6,
    kAdaptiveRhoFractionFieldNumber = 7,
    kMaxIterFieldNumber = 8,
    kEpsAbsFieldNumber = 9,
    kEpsRelFieldNumber = 10,
    kEpsPrimInfFieldNumber = 11,
    kEpsDualInfFieldNumber = 12,
    kAlphaFieldNumber = 13,
    kDeltaFieldNumber = 14,
    kAdaptiveRhoFieldNumber = 4,
    kPolishFieldNumber = 15,
    kVerboseFieldNumber = 17,
    kScaledTerminationFieldNumber = 18,
    kWarmStartFieldNumber = 20,
    kPolishRefineIterFieldNumber = 16,
    kCheckTerminationFieldNumber = 19,
    kTimeLimitFieldNumber = 21,
  };
  // optional double rho = 1;
  bool has_rho() const;
  void clear_rho() ;
  double rho() const;
  void set_rho(double value);

  private:
  double _internal_rho() const;
  void _internal_set_rho(double value);

  public:
  // optional double sigma = 2;
  bool has_sigma() const;
  void clear_sigma() ;
  double sigma() const;
  void set_sigma(double value);

  private:
  double _internal_sigma() const;
  void _internal_set_sigma(double value);

  public:
  // optional int64 scaling = 3;
  bool has_scaling() const;
  void clear_scaling() ;
  ::int64_t scaling() const;
  void set_scaling(::int64_t value);

  private:
  ::int64_t _internal_scaling() const;
  void _internal_set_scaling(::int64_t value);

  public:
  // optional int64 adaptive_rho_interval = 5;
  bool has_adaptive_rho_interval() const;
  void clear_adaptive_rho_interval() ;
  ::int64_t adaptive_rho_interval() const;
  void set_adaptive_rho_interval(::int64_t value);

  private:
  ::int64_t _internal_adaptive_rho_interval() const;
  void _internal_set_adaptive_rho_interval(::int64_t value);

  public:
  // optional double adaptive_rho_tolerance = 6;
  bool has_adaptive_rho_tolerance() const;
  void clear_adaptive_rho_tolerance() ;
  double adaptive_rho_tolerance() const;
  void set_adaptive_rho_tolerance(double value);

  private:
  double _internal_adaptive_rho_tolerance() const;
  void _internal_set_adaptive_rho_tolerance(double value);

  public:
  // optional double adaptive_rho_fraction = 7;
  bool has_adaptive_rho_fraction() const;
  void clear_adaptive_rho_fraction() ;
  double adaptive_rho_fraction() const;
  void set_adaptive_rho_fraction(double value);

  private:
  double _internal_adaptive_rho_fraction() const;
  void _internal_set_adaptive_rho_fraction(double value);

  public:
  // optional int64 max_iter = 8;
  bool has_max_iter() const;
  void clear_max_iter() ;
  ::int64_t max_iter() const;
  void set_max_iter(::int64_t value);

  private:
  ::int64_t _internal_max_iter() const;
  void _internal_set_max_iter(::int64_t value);

  public:
  // optional double eps_abs = 9;
  bool has_eps_abs() const;
  void clear_eps_abs() ;
  double eps_abs() const;
  void set_eps_abs(double value);

  private:
  double _internal_eps_abs() const;
  void _internal_set_eps_abs(double value);

  public:
  // optional double eps_rel = 10;
  bool has_eps_rel() const;
  void clear_eps_rel() ;
  double eps_rel() const;
  void set_eps_rel(double value);

  private:
  double _internal_eps_rel() const;
  void _internal_set_eps_rel(double value);

  public:
  // optional double eps_prim_inf = 11;
  bool has_eps_prim_inf() const;
  void clear_eps_prim_inf() ;
  double eps_prim_inf() const;
  void set_eps_prim_inf(double value);

  private:
  double _internal_eps_prim_inf() const;
  void _internal_set_eps_prim_inf(double value);

  public:
  // optional double eps_dual_inf = 12;
  bool has_eps_dual_inf() const;
  void clear_eps_dual_inf() ;
  double eps_dual_inf() const;
  void set_eps_dual_inf(double value);

  private:
  double _internal_eps_dual_inf() const;
  void _internal_set_eps_dual_inf(double value);

  public:
  // optional double alpha = 13;
  bool has_alpha() const;
  void clear_alpha() ;
  double alpha() const;
  void set_alpha(double value);

  private:
  double _internal_alpha() const;
  void _internal_set_alpha(double value);

  public:
  // optional double delta = 14;
  bool has_delta() const;
  void clear_delta() ;
  double delta() const;
  void set_delta(double value);

  private:
  double _internal_delta() const;
  void _internal_set_delta(double value);

  public:
  // optional bool adaptive_rho = 4;
  bool has_adaptive_rho() const;
  void clear_adaptive_rho() ;
  bool adaptive_rho() const;
  void set_adaptive_rho(bool value);

  private:
  bool _internal_adaptive_rho() const;
  void _internal_set_adaptive_rho(bool value);

  public:
  // optional bool polish = 15;
  bool has_polish() const;
  void clear_polish() ;
  bool polish() const;
  void set_polish(bool value);

  private:
  bool _internal_polish() const;
  void _internal_set_polish(bool value);

  public:
  // optional bool verbose = 17;
  bool has_verbose() const;
  void clear_verbose() ;
  bool verbose() const;
  void set_verbose(bool value);

  private:
  bool _internal_verbose() const;
  void _internal_set_verbose(bool value);

  public:
  // optional bool scaled_termination = 18;
  bool has_scaled_termination() const;
  void clear_scaled_termination() ;
  bool scaled_termination() const;
  void set_scaled_termination(bool value);

  private:
  bool _internal_scaled_termination() const;
  void _internal_set_scaled_termination(bool value);

  public:
  // optional bool warm_start = 20;
  bool has_warm_start() const;
  void clear_warm_start() ;
  bool warm_start() const;
  void set_warm_start(bool value);

  private:
  bool _internal_warm_start() const;
  void _internal_set_warm_start(bool value);

  public:
  // optional int64 polish_refine_iter = 16;
  bool has_polish_refine_iter() const;
  void clear_polish_refine_iter() ;
  ::int64_t polish_refine_iter() const;
  void set_polish_refine_iter(::int64_t value);

  private:
  ::int64_t _internal_polish_refine_iter() const;
  void _internal_set_polish_refine_iter(::int64_t value);

  public:
  // optional int64 check_termination = 19;
  bool has_check_termination() const;
  void clear_check_termination() ;
  ::int64_t check_termination() const;
  void set_check_termination(::int64_t value);

  private:
  ::int64_t _internal_check_termination() const;
  void _internal_set_check_termination(::int64_t value);

  public:
  // optional double time_limit = 21;
  bool has_time_limit() const;
  void clear_time_limit() ;
  double time_limit() const;
  void set_time_limit(double value);

  private:
  double _internal_time_limit() const;
  void _internal_set_time_limit(double value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.OsqpSettingsProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 21, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    double rho_;
    double sigma_;
    ::int64_t scaling_;
    ::int64_t adaptive_rho_interval_;
    double adaptive_rho_tolerance_;
    double adaptive_rho_fraction_;
    ::int64_t max_iter_;
    double eps_abs_;
    double eps_rel_;
    double eps_prim_inf_;
    double eps_dual_inf_;
    double alpha_;
    double delta_;
    bool adaptive_rho_;
    bool polish_;
    bool verbose_;
    bool scaled_termination_;
    bool warm_start_;
    ::int64_t polish_refine_iter_;
    ::int64_t check_termination_;
    double time_limit_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fsolvers_2fosqp_2eproto;
};
// -------------------------------------------------------------------

class OsqpOutput final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:operations_research.math_opt.OsqpOutput) */ {
 public:
  inline OsqpOutput() : OsqpOutput(nullptr) {}
  ~OsqpOutput() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OsqpOutput(
      ::google::protobuf::internal::ConstantInitialized);

  inline OsqpOutput(const OsqpOutput& from) : OsqpOutput(nullptr, from) {}
  inline OsqpOutput(OsqpOutput&& from) noexcept
      : OsqpOutput(nullptr, std::move(from)) {}
  inline OsqpOutput& operator=(const OsqpOutput& from) {
    CopyFrom(from);
    return *this;
  }
  inline OsqpOutput& operator=(OsqpOutput&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OsqpOutput& default_instance() {
    return *internal_default_instance();
  }
  static inline const OsqpOutput* internal_default_instance() {
    return reinterpret_cast<const OsqpOutput*>(
        &_OsqpOutput_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(OsqpOutput& a, OsqpOutput& b) { a.Swap(&b); }
  inline void Swap(OsqpOutput* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OsqpOutput* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OsqpOutput* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OsqpOutput>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OsqpOutput& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OsqpOutput& from) { OsqpOutput::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OsqpOutput* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "operations_research.math_opt.OsqpOutput"; }

 protected:
  explicit OsqpOutput(::google::protobuf::Arena* arena);
  OsqpOutput(::google::protobuf::Arena* arena, const OsqpOutput& from);
  OsqpOutput(::google::protobuf::Arena* arena, OsqpOutput&& from) noexcept
      : OsqpOutput(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInitializedUnderlyingSolverFieldNumber = 1,
  };
  // bool initialized_underlying_solver = 1;
  void clear_initialized_underlying_solver() ;
  bool initialized_underlying_solver() const;
  void set_initialized_underlying_solver(bool value);

  private:
  bool _internal_initialized_underlying_solver() const;
  void _internal_set_initialized_underlying_solver(bool value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.OsqpOutput)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    bool initialized_underlying_solver_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fsolvers_2fosqp_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// OsqpSettingsProto

// optional double rho = 1;
inline bool OsqpSettingsProto::has_rho() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_rho() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rho_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double OsqpSettingsProto::rho() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.rho)
  return _internal_rho();
}
inline void OsqpSettingsProto::set_rho(double value) {
  _internal_set_rho(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.rho)
}
inline double OsqpSettingsProto::_internal_rho() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rho_;
}
inline void OsqpSettingsProto::_internal_set_rho(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rho_ = value;
}

// optional double sigma = 2;
inline bool OsqpSettingsProto::has_sigma() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_sigma() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sigma_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double OsqpSettingsProto::sigma() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.sigma)
  return _internal_sigma();
}
inline void OsqpSettingsProto::set_sigma(double value) {
  _internal_set_sigma(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.sigma)
}
inline double OsqpSettingsProto::_internal_sigma() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sigma_;
}
inline void OsqpSettingsProto::_internal_set_sigma(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sigma_ = value;
}

// optional int64 scaling = 3;
inline bool OsqpSettingsProto::has_scaling() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_scaling() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.scaling_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t OsqpSettingsProto::scaling() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.scaling)
  return _internal_scaling();
}
inline void OsqpSettingsProto::set_scaling(::int64_t value) {
  _internal_set_scaling(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.scaling)
}
inline ::int64_t OsqpSettingsProto::_internal_scaling() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.scaling_;
}
inline void OsqpSettingsProto::_internal_set_scaling(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.scaling_ = value;
}

// optional bool adaptive_rho = 4;
inline bool OsqpSettingsProto::has_adaptive_rho() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_adaptive_rho() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.adaptive_rho_ = false;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline bool OsqpSettingsProto::adaptive_rho() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.adaptive_rho)
  return _internal_adaptive_rho();
}
inline void OsqpSettingsProto::set_adaptive_rho(bool value) {
  _internal_set_adaptive_rho(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.adaptive_rho)
}
inline bool OsqpSettingsProto::_internal_adaptive_rho() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.adaptive_rho_;
}
inline void OsqpSettingsProto::_internal_set_adaptive_rho(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.adaptive_rho_ = value;
}

// optional int64 adaptive_rho_interval = 5;
inline bool OsqpSettingsProto::has_adaptive_rho_interval() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_adaptive_rho_interval() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.adaptive_rho_interval_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t OsqpSettingsProto::adaptive_rho_interval() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.adaptive_rho_interval)
  return _internal_adaptive_rho_interval();
}
inline void OsqpSettingsProto::set_adaptive_rho_interval(::int64_t value) {
  _internal_set_adaptive_rho_interval(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.adaptive_rho_interval)
}
inline ::int64_t OsqpSettingsProto::_internal_adaptive_rho_interval() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.adaptive_rho_interval_;
}
inline void OsqpSettingsProto::_internal_set_adaptive_rho_interval(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.adaptive_rho_interval_ = value;
}

// optional double adaptive_rho_tolerance = 6;
inline bool OsqpSettingsProto::has_adaptive_rho_tolerance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_adaptive_rho_tolerance() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.adaptive_rho_tolerance_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double OsqpSettingsProto::adaptive_rho_tolerance() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.adaptive_rho_tolerance)
  return _internal_adaptive_rho_tolerance();
}
inline void OsqpSettingsProto::set_adaptive_rho_tolerance(double value) {
  _internal_set_adaptive_rho_tolerance(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.adaptive_rho_tolerance)
}
inline double OsqpSettingsProto::_internal_adaptive_rho_tolerance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.adaptive_rho_tolerance_;
}
inline void OsqpSettingsProto::_internal_set_adaptive_rho_tolerance(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.adaptive_rho_tolerance_ = value;
}

// optional double adaptive_rho_fraction = 7;
inline bool OsqpSettingsProto::has_adaptive_rho_fraction() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_adaptive_rho_fraction() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.adaptive_rho_fraction_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline double OsqpSettingsProto::adaptive_rho_fraction() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.adaptive_rho_fraction)
  return _internal_adaptive_rho_fraction();
}
inline void OsqpSettingsProto::set_adaptive_rho_fraction(double value) {
  _internal_set_adaptive_rho_fraction(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.adaptive_rho_fraction)
}
inline double OsqpSettingsProto::_internal_adaptive_rho_fraction() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.adaptive_rho_fraction_;
}
inline void OsqpSettingsProto::_internal_set_adaptive_rho_fraction(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.adaptive_rho_fraction_ = value;
}

// optional int64 max_iter = 8;
inline bool OsqpSettingsProto::has_max_iter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_max_iter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_iter_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int64_t OsqpSettingsProto::max_iter() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.max_iter)
  return _internal_max_iter();
}
inline void OsqpSettingsProto::set_max_iter(::int64_t value) {
  _internal_set_max_iter(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.max_iter)
}
inline ::int64_t OsqpSettingsProto::_internal_max_iter() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_iter_;
}
inline void OsqpSettingsProto::_internal_set_max_iter(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_iter_ = value;
}

// optional double eps_abs = 9;
inline bool OsqpSettingsProto::has_eps_abs() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_eps_abs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_abs_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline double OsqpSettingsProto::eps_abs() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.eps_abs)
  return _internal_eps_abs();
}
inline void OsqpSettingsProto::set_eps_abs(double value) {
  _internal_set_eps_abs(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.eps_abs)
}
inline double OsqpSettingsProto::_internal_eps_abs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eps_abs_;
}
inline void OsqpSettingsProto::_internal_set_eps_abs(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_abs_ = value;
}

// optional double eps_rel = 10;
inline bool OsqpSettingsProto::has_eps_rel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_eps_rel() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_rel_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline double OsqpSettingsProto::eps_rel() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.eps_rel)
  return _internal_eps_rel();
}
inline void OsqpSettingsProto::set_eps_rel(double value) {
  _internal_set_eps_rel(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.eps_rel)
}
inline double OsqpSettingsProto::_internal_eps_rel() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eps_rel_;
}
inline void OsqpSettingsProto::_internal_set_eps_rel(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_rel_ = value;
}

// optional double eps_prim_inf = 11;
inline bool OsqpSettingsProto::has_eps_prim_inf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_eps_prim_inf() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_prim_inf_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline double OsqpSettingsProto::eps_prim_inf() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.eps_prim_inf)
  return _internal_eps_prim_inf();
}
inline void OsqpSettingsProto::set_eps_prim_inf(double value) {
  _internal_set_eps_prim_inf(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.eps_prim_inf)
}
inline double OsqpSettingsProto::_internal_eps_prim_inf() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eps_prim_inf_;
}
inline void OsqpSettingsProto::_internal_set_eps_prim_inf(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_prim_inf_ = value;
}

// optional double eps_dual_inf = 12;
inline bool OsqpSettingsProto::has_eps_dual_inf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_eps_dual_inf() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_dual_inf_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline double OsqpSettingsProto::eps_dual_inf() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.eps_dual_inf)
  return _internal_eps_dual_inf();
}
inline void OsqpSettingsProto::set_eps_dual_inf(double value) {
  _internal_set_eps_dual_inf(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.eps_dual_inf)
}
inline double OsqpSettingsProto::_internal_eps_dual_inf() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eps_dual_inf_;
}
inline void OsqpSettingsProto::_internal_set_eps_dual_inf(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_dual_inf_ = value;
}

// optional double alpha = 13;
inline bool OsqpSettingsProto::has_alpha() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_alpha() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.alpha_ = 0;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline double OsqpSettingsProto::alpha() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.alpha)
  return _internal_alpha();
}
inline void OsqpSettingsProto::set_alpha(double value) {
  _internal_set_alpha(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.alpha)
}
inline double OsqpSettingsProto::_internal_alpha() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.alpha_;
}
inline void OsqpSettingsProto::_internal_set_alpha(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.alpha_ = value;
}

// optional double delta = 14;
inline bool OsqpSettingsProto::has_delta() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_delta() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.delta_ = 0;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline double OsqpSettingsProto::delta() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.delta)
  return _internal_delta();
}
inline void OsqpSettingsProto::set_delta(double value) {
  _internal_set_delta(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.delta)
}
inline double OsqpSettingsProto::_internal_delta() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.delta_;
}
inline void OsqpSettingsProto::_internal_set_delta(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.delta_ = value;
}

// optional bool polish = 15;
inline bool OsqpSettingsProto::has_polish() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_polish() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.polish_ = false;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline bool OsqpSettingsProto::polish() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.polish)
  return _internal_polish();
}
inline void OsqpSettingsProto::set_polish(bool value) {
  _internal_set_polish(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.polish)
}
inline bool OsqpSettingsProto::_internal_polish() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.polish_;
}
inline void OsqpSettingsProto::_internal_set_polish(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.polish_ = value;
}

// optional int64 polish_refine_iter = 16;
inline bool OsqpSettingsProto::has_polish_refine_iter() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_polish_refine_iter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.polish_refine_iter_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline ::int64_t OsqpSettingsProto::polish_refine_iter() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.polish_refine_iter)
  return _internal_polish_refine_iter();
}
inline void OsqpSettingsProto::set_polish_refine_iter(::int64_t value) {
  _internal_set_polish_refine_iter(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.polish_refine_iter)
}
inline ::int64_t OsqpSettingsProto::_internal_polish_refine_iter() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.polish_refine_iter_;
}
inline void OsqpSettingsProto::_internal_set_polish_refine_iter(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.polish_refine_iter_ = value;
}

// optional bool verbose = 17;
inline bool OsqpSettingsProto::has_verbose() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_verbose() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.verbose_ = false;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline bool OsqpSettingsProto::verbose() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.verbose)
  return _internal_verbose();
}
inline void OsqpSettingsProto::set_verbose(bool value) {
  _internal_set_verbose(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.verbose)
}
inline bool OsqpSettingsProto::_internal_verbose() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.verbose_;
}
inline void OsqpSettingsProto::_internal_set_verbose(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.verbose_ = value;
}

// optional bool scaled_termination = 18;
inline bool OsqpSettingsProto::has_scaled_termination() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_scaled_termination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.scaled_termination_ = false;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline bool OsqpSettingsProto::scaled_termination() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.scaled_termination)
  return _internal_scaled_termination();
}
inline void OsqpSettingsProto::set_scaled_termination(bool value) {
  _internal_set_scaled_termination(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.scaled_termination)
}
inline bool OsqpSettingsProto::_internal_scaled_termination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.scaled_termination_;
}
inline void OsqpSettingsProto::_internal_set_scaled_termination(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.scaled_termination_ = value;
}

// optional int64 check_termination = 19;
inline bool OsqpSettingsProto::has_check_termination() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_check_termination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.check_termination_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline ::int64_t OsqpSettingsProto::check_termination() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.check_termination)
  return _internal_check_termination();
}
inline void OsqpSettingsProto::set_check_termination(::int64_t value) {
  _internal_set_check_termination(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.check_termination)
}
inline ::int64_t OsqpSettingsProto::_internal_check_termination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.check_termination_;
}
inline void OsqpSettingsProto::_internal_set_check_termination(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.check_termination_ = value;
}

// optional bool warm_start = 20;
inline bool OsqpSettingsProto::has_warm_start() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_warm_start() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.warm_start_ = false;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline bool OsqpSettingsProto::warm_start() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.warm_start)
  return _internal_warm_start();
}
inline void OsqpSettingsProto::set_warm_start(bool value) {
  _internal_set_warm_start(value);
  _impl_._has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.warm_start)
}
inline bool OsqpSettingsProto::_internal_warm_start() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.warm_start_;
}
inline void OsqpSettingsProto::_internal_set_warm_start(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.warm_start_ = value;
}

// optional double time_limit = 21;
inline bool OsqpSettingsProto::has_time_limit() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline void OsqpSettingsProto::clear_time_limit() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_limit_ = 0;
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline double OsqpSettingsProto::time_limit() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpSettingsProto.time_limit)
  return _internal_time_limit();
}
inline void OsqpSettingsProto::set_time_limit(double value) {
  _internal_set_time_limit(value);
  _impl_._has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpSettingsProto.time_limit)
}
inline double OsqpSettingsProto::_internal_time_limit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_limit_;
}
inline void OsqpSettingsProto::_internal_set_time_limit(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_limit_ = value;
}

// -------------------------------------------------------------------

// OsqpOutput

// bool initialized_underlying_solver = 1;
inline void OsqpOutput::clear_initialized_underlying_solver() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.initialized_underlying_solver_ = false;
}
inline bool OsqpOutput::initialized_underlying_solver() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.OsqpOutput.initialized_underlying_solver)
  return _internal_initialized_underlying_solver();
}
inline void OsqpOutput::set_initialized_underlying_solver(bool value) {
  _internal_set_initialized_underlying_solver(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.OsqpOutput.initialized_underlying_solver)
}
inline bool OsqpOutput::_internal_initialized_underlying_solver() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.initialized_underlying_solver_;
}
inline void OsqpOutput::_internal_set_initialized_underlying_solver(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.initialized_underlying_solver_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace math_opt
}  // namespace operations_research


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2fsolvers_2fosqp_2eproto_2epb_2eh
